{"version":3,"file":"17.main.js","sources":["webpack:///./src/components/views/managers/ClientManagerCreate.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { getProfileFetch } from '../../../actions'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel, CRow,\r\n  CCol,\r\n  CButton,\r\n  CSelect\r\n} from \"@coreui/react\";\r\nimport DjangoCSRFToken from 'django-react-csrftoken'\r\nimport { FoxApiService } from '../../../services'\r\n\r\nconst positions = [\r\n  { id: -1, position: \"Choose manager position\" },\r\n  { id: \"SafeMan\", position: \"Safety Manager\" },\r\n  { id: \"SecMan\", position: \"Security Manager\" },\r\n  { id: \"SecOff\", position: \"Security Officer\" },\r\n  { id: \"SiteOwn\", position: \"Site Owner\" },\r\n  { id: \"WorkOwn\", position: \"Owner of Work\" },\r\n  { id: \"SecGrd\", position: \"Security Guards\" }\r\n]\r\n\r\nconst foxApi = new FoxApiService();\r\n\r\nclass ClientManagerCreate extends Component {\r\n\r\n  state = {\r\n    username: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    position: -1,\r\n    department: \"\",\r\n    company: this.props.company,\r\n    role: \"CliMan\",\r\n    error: false\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if (parseInt(this.state.position) === -1) {\r\n      this.setState({\r\n        error: 'Client manager position was not selected! Please, choose position form the list'\r\n      })\r\n    } else {\r\n      this.formData = this.state;\r\n      delete this.formData.error;\r\n      await foxApi.createEntityOf('client_managers', this.formData).then(() => {\r\n        this.props.history.goBack()\r\n      },\r\n        (error) => {\r\n          console.error(error);\r\n          this.setState({\r\n            error: 'Client manager creation failed!' +\r\n              ' Please check your input and try again!' +\r\n              ' In case this problem repeats, please contact your administrator!'\r\n          })\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.getProfileFetch()\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <CRow>\r\n        <CCol>\r\n          <CForm\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            <DjangoCSRFToken />\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"username\">Enter client manager username. This will be used for login</CLabel>\r\n              <CInput\r\n                id=\"username\"\r\n                name='username'\r\n                placeholder=\"Username\"\r\n                value={this.state.username}\r\n                onChange={this.handleChange}\r\n                required />\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"name\">Enter client manager verbose name</CLabel>\r\n              <CInput\r\n                id=\"name\"\r\n                name='name'\r\n                placeholder=\"Verbose name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n                required />\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"email\">Enter client manager email</CLabel>\r\n              <CInput\r\n                id=\"email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"target_type\">Client Manager Position</CLabel>\r\n              <CSelect\r\n                id=\"position\"\r\n                name=\"position\"\r\n                placeholder=\"Choose position\"\r\n                value={this.state.position}\r\n                onChange={this.handleChange}\r\n                required\r\n              >\r\n                {positions.map((option) => {\r\n                  return (\r\n                    <option key={option.id} value={option.id}>{option.position}</option>\r\n                  )\r\n                }\r\n                )}\r\n              </CSelect>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"department\">Enter client manager department</CLabel>\r\n              <CInput\r\n                id=\"department\"\r\n                name=\"department\"\r\n                placeholder=\"Department\"\r\n                value={this.state.department}\r\n                onChange={this.handleChange}\r\n                required />\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CButton type=\"submit\" color=\"dark\" variant=\"outline\" block>Create client manager</CButton>\r\n            </CFormGroup>\r\n            {this.state.error\r\n              ? <p>{this.state.error}</p>\r\n              : null\r\n            }\r\n          </CForm>\r\n        </CCol>\r\n      </CRow >\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    company: state.currentUser.company,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProfileFetch: () => dispatch(getProfileFetch())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientManagerCreate)\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AASA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AAGA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AACA;AAJA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AAUA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAKA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AAIA;AADA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAAA;AAAA;AAEA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;;;;;AA/HA;AACA;AAgIA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}