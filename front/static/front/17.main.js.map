{"version":3,"file":"17.main.js","sources":["webpack:///./src/components/views/workers/WorkerCreate.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { getProfileFetch } from '../../../actions'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    CForm,\r\n    CFormGroup,\r\n    CInput,\r\n    CLabel, CRow,\r\n    CCol,\r\n} from \"@coreui/react\";\r\nimport DjangoCSRFToken from 'django-react-csrftoken'\r\nimport { FoxApiService } from '../../../services'\r\n\r\nconst foxApi = new FoxApiService();\r\n\r\nclass ProjectCreate extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        contractor: this.props.contractor,\r\n        birthday: \"\",\r\n        card_number_id: \"\",\r\n        license_number: \"\",\r\n        passport: \"\",\r\n        safety_green_card: \"\",\r\n        position_in_company: \"\",\r\n        error: false\r\n    }\r\n\r\n    handleChange = event => {\r\n        console.log(this.state);\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        this.formData = this.state;\r\n        delete this.formData.error;\r\n        await foxApi.createEntityOf('workers', this.formData).then(() => {\r\n            this.props.history.goBack()\r\n        },\r\n            (error) => {\r\n                console.error(error);\r\n                this.setState({\r\n                    error: 'Worker creation failed!' +\r\n                        ' Please check your input and try again!' +\r\n                        ' In case this problem repeats, please contact your administrator!'\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await this.props.getProfileFetch()\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <CRow>\r\n                <CCol>\r\n                    <CForm\r\n                        onSubmit={this.handleSubmit}\r\n                    >\r\n                        <DjangoCSRFToken />\r\n                        <CFormGroup>\r\n                            <CLabel htmlFor=\"name\">Name</CLabel>\r\n                            <CInput\r\n                                id=\"name\"\r\n                                name='name'\r\n                                placeholder=\"Enter worker name\"\r\n                                value={this.state.name}\r\n                                onChange={this.handleChange}\r\n                                required />\r\n                        </CFormGroup>\r\n                        <CFormGroup>\r\n                            <CLabel htmlFor=\"birthday\">Birthday</CLabel>\r\n                            <CInput\r\n                                type=\"date\"\r\n                                id=\"birthday\"\r\n                                name=\"birthday\"\r\n                                value={this.state.birthday}\r\n                                onChange={this.handleChange}\r\n                                required\r\n                            />\r\n                        </CFormGroup>\r\n                        <CFormGroup>\r\n                            <CLabel htmlFor=\"card_number_id\">Card number ID</CLabel>\r\n                            <CInput\r\n                                id=\"card_number_id\"\r\n                                name='card_number_id'\r\n                                placeholder=\"Enter ID\"\r\n                                value={this.state.card_number_id}\r\n                                onChange={this.handleChange}\r\n                                required />\r\n                        </CFormGroup>\r\n                        <CFormGroup>\r\n                            <CLabel htmlFor=\"license_number\">License Number</CLabel>\r\n                            <CInput\r\n                                id=\"license_number\"\r\n                                name='license_number'\r\n                                placeholder=\"Enter worker name\"\r\n                                value={this.state.license_number}\r\n                                onChange={this.handleChange}\r\n                                required />\r\n                        </CFormGroup>\r\n                        <CFormGroup>\r\n                            <CLabel htmlFor=\"passport\">Passport</CLabel>\r\n                            <CInput\r\n                                id=\"passport\"\r\n                                name='passport'\r\n                                placeholder=\"Enter passport info\"\r\n                                value={this.state.passport}\r\n                                onChange={this.handleChange}\r\n                                required />\r\n                        </CFormGroup>\r\n                        <CFormGroup>\r\n                            <CLabel htmlFor=\"safety_green_card\">Safety Green Card</CLabel>\r\n                            <CInput\r\n                                id=\"safety_green_card\"\r\n                                name='safety_green_card'\r\n                                placeholder=\"Enter card info\"\r\n                                value={this.state.safety_green_card}\r\n                                onChange={this.handleChange}\r\n                                required />\r\n                        </CFormGroup>\r\n                        <CFormGroup>\r\n                            <CLabel htmlFor=\"position_in_company\">Position in Company</CLabel>\r\n                            <CInput\r\n                                id=\"position_in_company\"\r\n                                name='position_in_company'\r\n                                placeholder=\"Enter worker position\"\r\n                                value={this.state.position_in_company}\r\n                                onChange={this.handleChange}\r\n                                required />\r\n                        </CFormGroup>\r\n\r\n\r\n                        <CFormGroup>\r\n                            <CInput type=\"submit\" value=\"Create worker\" color=\"info\" disabled={this.state.password !== this.state.password2} />\r\n                        </CFormGroup>\r\n                        {this.state.error\r\n                            ? <p>{this.state.error}</p>\r\n                            : null\r\n                        }\r\n                    </CForm>\r\n                </CCol>\r\n            </CRow >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contractor: state.currentUser.id,\r\n        options: state.entityListTable.tableData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getProfileFetch: () => dispatch(getProfileFetch()),\r\n    getContractorList: () => dispatch(getContractorList())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectCreate)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAOA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAWA;AACA;AACA;AAAA;AAGA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAKA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAIA;AADA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;;;;;AAvIA;AACA;AAwIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}