{"version":3,"file":"3.main.js","sources":["webpack:///./src/components/tables/ExtendedListTable.js","webpack:///./src/components/tables/FoxEntityListTable.js","webpack:///./src/components/tables/WorkStatusDropdown.js","webpack:///./src/components/tables/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardTitle,\n  CCol,\n  CDataTable,\n  CRow,\n  CLink,\n  CButton\n} from '@coreui/react'\nimport WorkStatusDropdown from './WorkStatusDropdown'\n\n\nclass ExtendedListTable extends Component {\n\n  alertOnClick = (id, e) => {\n    this.props.history.push(`${this.props.match.url}/${id}`)\n  }\n\n  render = () => {\n    return (\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader\n              className=\"d-flex justify-content-between\">\n              <CCardTitle>\n                {this.props.tableName}\n              </CCardTitle>\n              {this.props.tableName === \"Projects\" && this.props.role === \"Contr\"\n                ?\n                null\n                :\n                <CLink\n                  className=\"btn btn-outline-success\"\n                  to={`${this.props.match.url}/new`}\n                >\n                  Add new\n                </CLink>\n              }\n            </CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={this.props.tableData ? this.props.tableData : []}\n                fields={this.props.fields ? this.props.fields : []}\n                clickableRows\n                hover\n                striped\n                bordered\n                sorter\n                footer\n                tableFilter\n                columnFilter\n                size=\"sm\"\n                itemsPerPage={10}\n                itemsPerPageSelect\n                pagination\n                scopedSlots={{\n                  'name':\n                    (item) => (\n                      <td>\n                        {/* <CButton\n                          color=\"link\"\n                          onClick={e => { this.alertOnClick(item.id, e) }}\n                        >\n                          {item.name}\n                        </CButton> */}\n                        <CLink\n                          to={`${this.props.match.url}/${item.id}`}\n                        >\n                          {item.name}\n                        </CLink>\n                      </td>\n                    ),\n                  'application_status':\n                    (item) => (\n                      <td>\n                        <CBadge color={this.props.getBadge(item.application_status)}>\n                          {item.application_status}\n                        </CBadge>\n                      </td>\n                    ),\n                  'work_status':\n                    (item) => (\n                      <td className=\"d-flex align-items-center\">\n                        <CBadge color={this.props.getBadge(item.work_status)}>\n                          {item.work_status}\n                        </CBadge>\n                        <WorkStatusDropdown key={item.id} item={item} {...this.props} />\n                      </td>\n                    )\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow >\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  role: state.currentUser.role\n})\n\n\n\nexport default connect(mapStateToProps, null)(ExtendedListTable)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardTitle,\n  CCol,\n  CDataTable,\n  CRow,\n  CLink,\n  CButton\n} from '@coreui/react'\n\n\nclass FoxEntityListTable extends Component {\n\n  alertOnClick = (id, e) => {\n    this.props.history.push(`${this.props.match.url}/${id}`)\n  }\n\n  render = () => {\n    return (\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader\n              className=\"d-flex justify-content-between\">\n              <CCardTitle>\n                {this.props.tableName}\n              </CCardTitle>\n              {this.props.tableName === \"Projects\" && this.props.role === \"Contr\"\n                ?\n                null\n                :\n                <CLink\n                  className=\"btn btn-outline-success\"\n                  to={`${this.props.match.url}/new`}\n                >\n                  Add new\n                </CLink>\n              }\n            </CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={this.props.tableData ? this.props.tableData : []}\n                fields={this.props.fields ? this.props.fields : []}\n                clickableRows\n                hover\n                striped\n                bordered\n                sorter\n                footer\n                tableFilter\n                columnFilter\n                size=\"sm\"\n                itemsPerPage={10}\n                itemsPerPageSelect\n                pagination\n                scopedSlots={{\n                  'username':\n                    (item) => (\n                      <td>\n                        <CButton\n                          color=\"link\"\n                          onClick={e => { this.alertOnClick(item.id, e) }}\n                        >\n                          {item.username}\n                        </CButton>\n                      </td>\n                    ),\n                  'project_name':\n                    (item) => (\n                      <td>\n                        <CButton\n                          color=\"link\"\n                          onClick={e => { this.alertOnClick(item.id, e) }}\n                        >\n                          {item.project_name}\n                        </CButton>\n                      </td>\n                    ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow >\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  role: state.currentUser.role\n})\n\n\n\nexport default connect(mapStateToProps, null)(FoxEntityListTable)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { FoxApiService } from '../../services'\nimport { getProjectList } from '../../actions'\nimport { CDropdown, CDropdownToggle, CDropdownItem, CDropdownMenu } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n\nconst foxApi = new FoxApiService();\n\nconst choices = [\n  { Works_started: 'Works started' },\n  { Works_finished: 'Works finished' },\n  { Extended: 'Extended' },\n  { Closed: 'Closed' },\n]\n\n\nconst handleClick = async ({ value, props }, event) => {\n  await foxApi.patchEntityOf(\"projects\", props.item.id, { status: value })\n    .then(() => {\n      props.getProjectList();\n    })\n}\n\nconst WorkStatusDropdown = props => {\n  return (\n    props.role === \"CliAdm\" && props.item.work_status !== \"Application processing\" ?\n      <CDropdown >\n        <CDropdownToggle className=\"project-table-toggle\">\n          <CIcon\n            style={{ margin: \"0\" }}\n            className=\"table-dropdown-icon\"\n            name={'cilSettings'} />\n        </CDropdownToggle>\n        <CDropdownMenu className=\"p-0\" placement=\"bottom-end\">\n          {choices.map((choice, idx) => {\n            const [value, name] = Object.entries(choice)[0]\n            return <CDropdownItem\n              key={idx}\n              value={value}\n              onClick={event => handleClick({ value, props }, event)}\n            >{name}</CDropdownItem>\n          })}\n\n        </CDropdownMenu>\n      </CDropdown > : null\n\n\n  )\n}\n\nconst mapStateToProps = state => ({\n  role: state.currentUser.role\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getProjectList: () => dispatch(getProjectList()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkStatusDropdown)\n","import FoxEntityListTable from './FoxEntityListTable'\nimport WorkStatusDropdown from './WorkStatusDropdown'\nimport ExtendedListTable from './ExtendedListTable'\nexport { FoxEntityListTable, ExtendedListTable, WorkStatusDropdown } "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAYA;AACA;AAEA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AADA;AAUA;AACA;AAFA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AADA;AARA;AAeA;AACA;AAEA;AAAA;AAFA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AALA;AA1BA;AAfA;AAwDA;AACA;;;;;AAtFA;AACA;AAuFA;AAAA;AACA;AADA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/GA;AACA;AACA;AACA;AAaA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AADA;AAUA;AACA;AAFA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAFA;AAFA;AAUA;AACA;AAGA;AACA;AAAA;AAAA;AAFA;AAFA;AAbA;AAfA;AA6CA;AACA;;;;;AA3EA;AACA;AA4EA;AAAA;AACA;AADA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AAGA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAOA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;A","sourceRoot":""}