{"version":3,"file":"3.main.js","sources":["webpack:///./src/components/cards/FoxRegisterCard.js","webpack:///./src/components/forms/FoxRegisterForm.js","webpack:///./src/components/pages/Register.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { CContainer, CRow, CCol, CCard, CCardHeader, CCardBody, CCardFooter } from \"@coreui/react\";\r\nimport FoxRegisterForm from \"../forms/FoxRegisterForm\"\r\n\r\nclass FoxRegisterCard extends Component {\r\n    render() {\r\n        return (\r\n            <CCard>\r\n                <CCardHeader color='dark' textColor='light'>\r\n                    Register\r\n                </CCardHeader>\r\n                <FoxRegisterForm />\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FoxRegisterCard;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CForm, CFormGroup, CInput, CLabel, CContainer, CRow, CCol } from \"@coreui/react\";\r\nimport DjangoCSRFToken from 'django-react-csrftoken'\r\nimport { userRegisterFetch, registerError, allowRegistration } from '../../actions'\r\n\r\n\r\nclass FoxRegisterForm extends Component {\r\n\r\n    state = {\r\n        username: \"\",\r\n        password: \"\",\r\n        password2: \"\",\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n        if (this.state.password !== this.state.password2) {\r\n            console.log(this.state.password !== this.state.password2);\r\n            console.log(this.props)\r\n            this.props.registerError();\r\n        }\r\n        else {\r\n            this.props.allowRegistration(this.state.registrationToken);\r\n        };\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        this.props.userRegisterFetch({\r\n            password: this.state.password,\r\n            token: this.state.registrationToken\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CContainer fluid={true}>\r\n                <CRow className=\"mt-2 mb-2\">\r\n                    <CCol sm=\"8\" className=\"mx-auto\">\r\n                        <CForm\r\n                            onSubmit={this.handleSubmit}\r\n                        >\r\n                            <DjangoCSRFToken />\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"username\">Name</CLabel>\r\n                                <CInput\r\n                                    id=\"username\"\r\n                                    name='username'\r\n                                    placeholder=\"Enter your name\"\r\n                                    value={this.state.username}\r\n                                    onChange={this.handleChange}\r\n                                    readOnly\r\n                                    required />\r\n                            </CFormGroup>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"nf-password\">Password</CLabel>\r\n                                <CInput\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Enter Password..\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                />\r\n                                <CLabel htmlFor=\"nf-password\">Confirm Password</CLabel>\r\n                                <CInput\r\n                                    type=\"password\"\r\n                                    id=\"password2\"\r\n                                    name=\"password2\"\r\n                                    placeholder=\"Confirm Password..\"\r\n                                    value={this.state.password2}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                />\r\n                            </CFormGroup>\r\n                            <CFormGroup>\r\n                                <CInput type=\"submit\" value=\"Submit\" color=\"info\" active={this.state.loginError ? \"true\" : \"false\"} />\r\n                            </CFormGroup>\r\n                            {this.props.registerError\r\n                                ? <p>INVALID CREDENTIALS! PLEASE, CHECK YOUR PASSWORD AND PASSWORD CONFIRMATION FIELDS!</p>\r\n                                : null\r\n                            }\r\n                        </CForm>\r\n                    </CCol>\r\n                </CRow>\r\n            </CContainer >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        registerError: state.registerError,\r\n        registrationToken: state.registrationToken\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    userRegisterFetch: credentials => dispatch(userRegisterFetch(credentials)),\r\n    registerError: () => dispatch(registerError()),\r\n    allowRegistration: (token) => dispatch(allowRegistration(token))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FoxRegisterForm)","import React, { Component } from 'react'\r\nimport {\r\n    CCol,\r\n    CContainer,\r\n    CRow\r\n} from '@coreui/react'\r\nimport { connect } from 'react-redux'\r\nimport FoxRegisterCard from \"../cards/FoxRegisterCard\";\r\nimport { userRegisterValidationFetch } from \"../../actions\"\r\n\r\n\r\n\r\n\r\nclass Register extends Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.userRegisterValidationFetch(this.props.token)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n                <CContainer>\r\n                    <CRow className=\"justify-content-center\">\r\n                        <CCol md=\"6\">\r\n                            <FoxRegisterCard />\r\n                        </CCol>\r\n                    </CRow>\r\n                </CContainer>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentUser: state.currentUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    userRegisterValidationFetch: token => dispatch(userRegisterValidationFetch(token))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AAEA;AAAA;AAAA;AAMA;;;;AAVA;AACA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;;;;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AADA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;AApFA;AACA;AAsFA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3GA;AACA;AAKA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;;;;;;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAOA;;;;AAlBA;AACA;AAqBA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}