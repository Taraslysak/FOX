{"version":3,"file":"11.main.js","sources":["webpack:///./src/components/activity_log/ActivityLog.js","webpack:///./src/components/activity_log/index.js","webpack:///./src/components/views/projects/ProjectPTW.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { CCard, CCardHeader, CCardBody, CListGroup, CListGroupItem, CButton, CCollapse } from '@coreui/react'\nimport { FoxApiService } from '../../services'\nimport { connect } from 'react-redux'\n\nconst foxApi = new FoxApiService()\n\nclass ActivityLog extends Component {\n\n  state = {\n    items: [],\n    show: false\n  }\n\n  handleClick = () => {\n    this.setState({\n      show: !this.state.show\n    })\n  }\n\n  componentDidMount = () => {\n    foxApi.getEntityList(\"activities\", { project_id: this.props.projectId })\n      .then(data => {\n        this.setState({\n          items: data\n        })\n      })\n      .catch(error => console.log(error))\n  }\n\n  render = () => {\n    const { items, show } = this.state;\n    console.log(this.state);\n    return (\n      <CCard>\n        <CCardHeader>\n          <strong>Activity log</strong>\n          <CButton color=\"link\" onClick={this.handleClick}>{show ? 'Hide' : 'Show'}</CButton>\n          <CCollapse show={show}>\n            <CCardBody>\n              <CListGroup flush>\n                {items ?\n                  items.map((item) => {\n                    return (\n                      <CListGroupItem key={item.id}>\n                        {item.message}\n                      </CListGroupItem>\n                    )\n                  })\n                  : null}\n              </CListGroup>\n            </CCardBody>\n          </CCollapse>\n\n        </CCardHeader>\n      </CCard>\n    )\n  }\n}\n\nexport default ActivityLog\n","import ActivityLog from './ActivityLog'\n\nexport { ActivityLog }","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { getProfileFetch } from '../../../actions'\nimport {\n  CRow,\n  CCol,\n  CEmbed\n} from \"@coreui/react\";\nimport { ActivityLog } from '../../activity_log'\n\nclass ProjectPTW extends Component {\n\n  componentDidMount = () => {\n    this.props.getProfileFetch()\n  }\n\n  render = () => {\n    return (\n      <React.Fragment>\n        <CRow>\n          <CCol>\n            <ActivityLog projectId={this.props.match.params.id} />\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol>\n            {this.props.username ?\n              <CEmbed\n                ratio=\"16by9\"\n              >\n                <iframe src={`${window.location.origin}/api/ptw/${this.props.match.params.id}`} />\n              </CEmbed> : <Redirect to=\"\" />\n            }\n          </CCol>\n        </CRow >\n\n      </React.Fragment>\n\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.currentUser.username,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(getProfileFetch()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectPTW)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AAAA;AAIA;AASA;AACA;;;;;AAnDA;AACA;AAoDA;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAOA;AADA;AAGA;AAAA;AACA;AAAA;AAQA;AACA;;;;;AA9BA;AACA;AA+BA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}