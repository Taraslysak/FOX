{"version":3,"file":"26.main.js","sources":["webpack:///./src/components/views/workers/ContractorWorkersReview.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getProfileFetch, getWorkerList } from '../../../actions'\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCollapse\r\n} from \"@coreui/react\";\r\nimport { WorkerReview } from '../../../utils'\r\n\r\n\r\nclass ContractorWorkersReview extends Component {\r\n\r\n  state = {\r\n    current_worker_id: \"\",\r\n    current_worker_info: \"\"\r\n  }\r\n\r\n\r\n  handleWorkerSelect = event => {\r\n    this.state.current_worker_id === event.target.name ?\r\n      this.setState({\r\n        current_worker_id: \"\"\r\n      })\r\n      :\r\n      this.setState({\r\n        current_worker_id: event.target.name\r\n      })\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.getProfileFetch()\r\n      .then(() => this.props.getWorkerList({ contractor_id: this.props.match.params.id }, false))\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <CRow>\r\n        <CCol>\r\n          <CCard>\r\n            <CCardHeader>\r\n              <strong>Workers</strong>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              {this.props.workers ?\r\n                this.props.workers.map((worker, idx) => {\r\n                  return (\r\n                    <CCard key={`card-${idx}`} className=\"mb-0\">\r\n                      <CCardHeader key={`ch-${idx}`} id={worker.id}>\r\n                        <h5 key={`h5-${idx}`} className=\"m-0 p-0\">{worker.name}</h5>\r\n                        <h6 key={`h6-${idx}`} className=\"m-0 p-0\">{worker.position_in_company}</h6>\r\n                        <CButton\r\n                          key={`btn-${idx}`}\r\n                          block\r\n                          color=\"link\"\r\n                          className=\"text-left m-0 p-0\"\r\n                          id={worker.id}\r\n                          value={worker.id}\r\n                          name={worker.id}\r\n                          onClick={this.handleWorkerSelect}\r\n                        >Display Details</CButton>\r\n                      </CCardHeader>\r\n                      <CCollapse key={`clps-${idx}`} show={this.state.current_worker_id === worker.id.toString()}>\r\n                        <CCardBody key={`cbody-${idx}`}>\r\n                          <WorkerReview workerId={worker.id} />\r\n                        </CCardBody>\r\n                      </CCollapse>\r\n                    </CCard>\r\n                  )\r\n                })\r\n                :\r\n                <strong>The contractor hasn't attached any workers yet.</strong>\r\n              }\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    workers: state.entityListTable.tableData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProfileFetch: () => dispatch(getProfileFetch()),\r\n  getWorkerList: (params, additional) => dispatch(getWorkerList(params, additional)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContractorWorkersReview)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AASA;AACA;AAEA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;AAKA;AACA;AAEA;AADA;AAKA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAUA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AASA;AACA;;;;;AApEA;AACA;AAqEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}