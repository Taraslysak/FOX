{"version":3,"file":"4.main.js","sources":["webpack:///./src/components/modals/DeleteModal.js","webpack:///./src/components/modals/index.js","webpack:///./src/components/tables/FoxTableWithDeleteOption.js","webpack:///./src/components/tables/index.js"],"sourcesContent":["import React from 'react'\nimport {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n} from '@coreui/react'\n\n\nconst DeleteModal = props => {\n  return (\n    <CModal\n      show={props.danger}\n      onClose={props.setModalVisibility}\n      color=\"danger\"\n    >\n      <CModalHeader closeButton>\n        <CModalTitle>Confirm Deletion</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        {`Are you sure you want to delete this ${props.entity}?`}\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"danger\" onClick={props.confirmDelete}>Confirm</CButton>{' '}\n        <CButton color=\"secondary\" onClick={props.setModalVisibility}>Cancel</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default DeleteModal\n","import DeleteModal from './DeleteModal'\n\nexport { DeleteModal }","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardTitle,\n  CCol,\n  CDataTable,\n  CRow,\n  CLink,\n  CButton\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport WorkStatusDropdown from './WorkStatusDropdown'\nimport { FoxApiService } from '../../services'\nimport { DeleteModal } from '../modals'\n\n\nconst foxApi = new FoxApiService();\n\nclass FoxTableWithDeleteOption extends Component {\n\n  state = {\n    delete_id: \"\",\n    error: \"\",\n    modal: false\n  }\n\n  getEntityFromTableName = () => {\n    this.props.tableName.toLowercase()\n  }\n\n  callDeleteModal = (id) => {\n    this.setState({\n      delete_id: id\n    }, this.setModalVisibility)\n  }\n\n  setModalVisibility = () => {\n    this.setState({\n      modal: !this.state.modal\n    })\n  }\n\n  confirmDelete = async (id) => {\n    const entity = this.props.tableName.toLowerCase().replace(' ', '_');\n    await foxApi.deleteEntityOf(entity, id)\n      .then(() => {\n        this.props.updateList(this.props.role)\n        this.setModalVisibility()\n      },\n        (error) => {\n          console.error(error);\n          this.setState({\n            error: 'Could not delete entity!' +\n              ' Please check your input and try again!' +\n              ' In case this problem repeats, please contact your administrator!'\n          })\n        })\n    console.log(`delete entity [${entity}] ${id}`);\n  }\n\n  alertOnClick = (id, e) => {\n    this.props.history.push(`${this.props.match.url}/${id}`)\n  }\n\n  render = () => {\n    const linkName = this.props.fields ? this.props.fields[0] : \"username\"\n    const { delete_id, modal } = this.state\n    console.log(\"rendered\");\n    return (\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader\n              className=\"d-flex justify-content-between\">\n              <CCardTitle>\n                {this.props.tableName}\n              </CCardTitle>\n              {this.props.tableName === \"Projects\" && this.props.role === \"Contr\"\n                ?\n                null\n                :\n                <CLink\n                  className=\"btn btn-pill btn-outline-success\"\n                  to={`${this.props.match.url}/new`}\n                >\n                  Add new\n                </CLink>\n              }\n            </CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={this.props.tableData ? this.props.tableData : []}\n                fields={this.props.fields}\n                clickableRows\n                hover\n                striped\n                bordered\n                sorter\n                tableFilter\n                columnFilter\n                size=\"sm\"\n                itemsPerPage={10}\n                itemsPerPageSelect\n                pagination\n                scopedSlots={{\n                  [linkName]:\n                    (item) => (\n                      <td>\n                        <CLink\n                          to={`${this.props.match.url}/${item.id}`}\n                        >\n                          {item[linkName]}\n                        </CLink>\n                      </td>\n                    ),\n                  'application_status':\n                    (item) => (\n                      <td>\n                        <CBadge shape=\"pill\" color={this.props.getBadge(item.application_status)}>\n                          {item.application_status}\n                        </CBadge>\n                      </td>\n                    ),\n                  'work_status':\n                    (item) => (\n                      <td className=\"d-flex align-items-center\">\n                        <CBadge shape=\"pill\" color={this.props.getBadge(item.work_status)}>\n                          {item.work_status}\n                        </CBadge>\n                        <WorkStatusDropdown key={item.id} item={item} {...this.props} />\n                      </td>\n                    ),\n                  'delete_item':\n                    (item, index) => (\n                      <td>\n                        <CButton color=\"danger\" variant=\"ghost\" size=\"sm\" onClick={() => this.callDeleteModal(item.id)} block><CIcon name={'cilTrash'} /></CButton>\n                      </td>\n                    )\n                }}\n              />\n            </CCardBody>\n          </CCard>\n          <DeleteModal\n            setModalVisibility={this.setModalVisibility}\n            danger={modal}\n            entity=\"entity\"\n            confirmDelete={() => this.confirmDelete(delete_id)}\n          />\n        </CCol>\n      </CRow >\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  role: state.currentUser.role\n})\n\nexport default connect(mapStateToProps, null)(FoxTableWithDeleteOption)\n","import FoxEntityListTable from './FoxEntityListTable'\nimport FoxTableWithDeleteOption from './FoxTableWithDeleteOption'\nimport WorkStatusDropdown from './WorkStatusDropdown'\n\nexport { FoxEntityListTable, WorkStatusDropdown, FoxTableWithDeleteOption } "],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAYA;AACA;AACA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAKA;AACA;AAfA;AAeA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAiBA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAGA;AACA;AAKA;AADA;AAUA;AACA;AAFA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AADA;AAFA;AAUA;AAEA;AAAA;AAAA;AAFA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AALA;AASA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AA3CA;AAqDA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AASA;AACA;;;;;AAtIA;AACA;AAuIA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;;;;;;;;;AClKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;A","sourceRoot":""}