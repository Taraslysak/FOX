{"version":3,"file":"25.main.js","sources":["webpack:///./src/components/views/workers/ResponsiblePerson.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { getProfileFetch, getWorkerList } from '../../../actions'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CSelect\r\n} from \"@coreui/react\";\r\nimport DjangoCSRFToken from 'django-react-csrftoken'\r\nimport { FoxApiService } from '../../../services'\r\n\r\nconst foxApi = new FoxApiService();\r\n\r\nclass ResponsiblePerson extends Component {\r\n\r\n  state = {\r\n    responsible_person: -1,\r\n    error: false\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    }, () => console.log(this.state));\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    this.formData = this.state;\r\n    delete this.formData.error;\r\n    await foxApi.patchEntityOf('projects', this.props.match.params.id, this.formData).then(() => {\r\n      this.props.history.goBack()\r\n    },\r\n      (error) => {\r\n        console.error(error);\r\n        this.setState({\r\n          error: 'Responsible person creation failed!' +\r\n            ' Please check your input and try again!' +\r\n            ' In case this problem repeats, please contact your administrator!'\r\n        })\r\n      })\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.getProfileFetch()\r\n      .then(() => this.props.getWorkerList())\r\n      .then(() => foxApi.getDetailsOf(\"projects\", this.props.match.params.id))\r\n      .then(data => this.setState({ responsible_person: data.responsible_person }))\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <CRow>\r\n        <CCol>\r\n          <CForm\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            <DjangoCSRFToken />\r\n            <CFormGroup>\r\n              <h4>Please, choose the responsible person among your workers.</h4>\r\n              <CSelect\r\n                id=\"responsible_person\"\r\n                name=\"responsible_person\"\r\n                placeholder=\"Choose responsible person\"\r\n                value={this.state.responsible_person}\r\n                onChange={this.handleChange}\r\n                required\r\n              >\r\n                <option key=\"-1\" value=\"-1\" disabled>Choose responsible person</option>\r\n                {this.props.options ? this.props.options.map((option) => {\r\n                  return (\r\n                    <option key={option.id} value={option.id}>{option.name}</option>\r\n                  )\r\n                }) : null\r\n                }\r\n              </CSelect>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CButton type=\"submit\" color=\"dark\" variant=\"outline\" block>Set responsible person</CButton>\r\n            </CFormGroup>\r\n            {this.state.error\r\n              ? <p>{this.state.error}</p>\r\n              : null\r\n            }\r\n          </CForm>\r\n        </CCol>\r\n      </CRow >\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contractor: state.currentUser.id,\r\n    options: state.entityListTable.tableData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProfileFetch: () => dispatch(getProfileFetch()),\r\n  getWorkerList: () => dispatch(getWorkerList())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponsiblePerson)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AASA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAEA;AAAA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAKA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AAIA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AAKA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;;;;;AA5EA;AACA;AA6EA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}