{"version":3,"file":"35.main.js","sources":["webpack:///./src/components/views/special_competencies/SpecialCompetencyCreate.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CCol,\n  CSelect,\n  CButton,\n  CInputFile,\n} from \"@coreui/react\";\nimport DjangoCSRFToken from 'django-react-csrftoken';\nimport { FoxApiService } from '../../../services';\nimport { getProfileFetch, } from '../../../actions';\n\n\nconst foxApi = new FoxApiService();\n\n\nclass SpecialCompetencyCreate extends Component {\n\n  state = {\n    worker: this.props.match.params.id,\n    name: \"\",\n    file: \"\",\n    issued_by: \"\",\n    submitCallback: \"\",\n    error: false\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  handleFileUpload = event => {\n    this.setState({\n      [event.target.name]: event.target.files[0]\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    this.requestData = this.state;\n    delete this.requestData.error;\n    this.formData = new FormData\n    Object.entries(this.requestData).forEach(([key, value]) => {\n      this.formData.append(key, value);\n    })\n    await foxApi.createEntityWithFile('worker_special_competencies', this.formData)\n      .then(() => {\n        this.state.submitCallback()\n      },\n        (error) => {\n          console.error(error);\n          this.setState({\n            error: 'Document creation failed!' +\n              ' Please check your input and try again!' +\n              ' In case this problem repeats, please contact your administrator!'\n          })\n        })\n  }\n\n  handleSimpleSubmit = () => {\n    this.setState({\n      submitCallback: () => { return this.props.history.push(`/workers/${this.props.match.params.id}/competencies`) }\n    });\n  }\n\n  handleSubmitOneMore = () => {\n    this.setState({\n      submitCallback: () => {\n        return this.setState({\n          name: \"\",\n          file: \"\",\n          issued_by: \"\",\n          submitCallback: \"\",\n        })\n      }\n    })\n  }\n\n  componentDidMount = async () => {\n    await this.props.getProfileFetch()\n  }\n\n  render = () => {\n    return (\n      <CRow>\n        <CCol>\n          <CForm\n            onSubmit={this.handleSubmit}\n          >\n            <DjangoCSRFToken />\n            <CFormGroup>\n              <CLabel htmlFor=\"name\">Name</CLabel>\n              <CInput\n                id=\"name\"\n                name='name'\n                placeholder=\"Enter document name\"\n                value={this.state.name}\n                onChange={this.handleChange}\n                required />\n            </CFormGroup>\n            <CFormGroup>\n              <CLabel htmlFor=\"file\">File</CLabel>\n              <CInputFile id=\"file\" name=\"file\" onChange={this.handleFileUpload} key={this.state.file}\n                required />\n            </CFormGroup>\n            <CFormGroup>\n              <CLabel htmlFor=\"issued_by\">Issued by</CLabel>\n              <CInput\n                id=\"issued_by\"\n                name='issued_by'\n                placeholder=\"Enter authority name\"\n                value={this.state.issued_by}\n                onChange={this.handleChange}\n                required />\n            </CFormGroup>\n            <CFormGroup>\n              <CRow>\n                <CCol md=\"6\">\n                  <CButton onClick={this.handleSimpleSubmit} type=\"submit\" color=\"dark\" variant=\"outline\" block>Create Competency</CButton>\n                </CCol>\n                <CCol md=\"6\">\n                  <CButton onClick={this.handleSubmitOneMore} type=\"submit\" color=\"primary\" variant=\"outline\" block>Create and add one more Competency</CButton>\n                </CCol>\n              </CRow>\n            </CFormGroup>\n            {this.state.error\n              ? <p>{this.state.error}</p>\n              : null\n            }\n          </CForm>\n        </CCol>\n      </CRow >\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    company: state.currentUser.company,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(getProfileFetch()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SpecialCompetencyCreate))\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAWA;AACA;AACA;AAGA;AACA;AAEA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AAGA;AACA;AAAA;AACA;AAGA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AARA;AAAA;AAWA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAKA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAsBA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAIA;AADA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;;;;;AAxHA;AACA;AAyHA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}