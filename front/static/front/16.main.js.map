{"version":3,"file":"16.main.js","sources":["webpack:///./src/components/views/contractors/ContractorDetail.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { getProfileFetch } from '../../../actions'\nimport { connect } from 'react-redux'\nimport {\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel, CRow,\n  CCol,\n  CButton,\n  CLink\n} from \"@coreui/react\";\nimport DjangoCSRFToken from 'django-react-csrftoken'\nimport { FoxApiService } from '../../../services'\n\nconst foxApi = new FoxApiService();\n\nclass ContractorDetail extends Component {\n\n  state = {\n    username: \"\",\n    email: \"\",\n    related_company: \"\",\n    company: this.props.company,\n    role: \"Contr\",\n    error: false\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    this.formData = this.state;\n    delete this.formData.error;\n    await foxApi.updateEntityOf('contractors', this.props.match.params.id, this.formData).then(() => {\n      this.props.history.goBack()\n    },\n      (error) => {\n        console.error(error);\n        this.setState({\n          error: 'Contractor update failed!' +\n            ' Please check your input and try again!' +\n            ' In case this problem repeats, please contact your administrator!'\n        })\n      })\n  }\n\n  componentDidMount = async () => {\n    await this.props.getProfileFetch()\n      .then(() => foxApi.getDetailsOf('contractors', this.props.match.params.id))\n      .then((data) => this.setState({ ...data }))\n  }\n\n  componentWillUnmount = () => {\n    console.log(\"will unmount\");\n  }\n\n  render = () => {\n    return (\n      <CRow>\n        <CCol>\n          <CForm\n            onSubmit={this.handleSubmit}\n          >\n            <DjangoCSRFToken />\n            <CFormGroup>\n              <CLabel htmlFor=\"username\">Contractor username</CLabel>\n              <CInput\n                id=\"username\"\n                name='username'\n                placeholder=\"Username\"\n                value={this.state.username}\n                onChange={this.handleChange}\n                required />\n            </CFormGroup>\n            <CFormGroup>\n              <CLabel htmlFor=\"email\">Contractor email</CLabel>\n              <CInput\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                value={this.state.email}\n                onChange={this.handleChange}\n                required\n              />\n            </CFormGroup>\n            <CFormGroup>\n              <CLabel htmlFor=\"username\">Contractor company</CLabel>\n              <CInput\n                id=\"related_company\"\n                name='related_company'\n                placeholder=\"Company name\"\n                value={this.state.related_company}\n                onChange={this.handleChange}\n                required />\n            </CFormGroup>\n            <CFormGroup>\n              <CLink\n                to={`/contractors/${this.props.match.params.id}/workers_review`}\n              >Browse workers</CLink>\n            </CFormGroup>\n\n            <CFormGroup>\n              <CButton type=\"submit\" color=\"dark\" variant=\"outline\" block>Save changes</CButton>\n            </CFormGroup>\n            {this.state.error\n              ? <p>{this.state.error}</p>\n              : null\n            }\n          </CForm>\n\n        </CCol>\n      </CRow >\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    company: state.currentUser.company,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(getProfileFetch())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContractorDetail)\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AASA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AAGA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAKA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAIA;AADA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;;;;;AAvGA;AACA;AAwGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}