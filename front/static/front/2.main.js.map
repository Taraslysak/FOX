{"version":3,"file":"2.main.js","sources":["webpack:///./src/components/layout/FoxContent.js","webpack:///./src/components/layout/FoxHeader.js","webpack:///./src/components/layout/FoxHeaderDropdown.js","webpack:///./src/components/layout/FoxHeaderDropdownMssg.js","webpack:///./src/components/layout/FoxHeaderDropdownNotif.js","webpack:///./src/components/layout/FoxHeaderDropdownTasks.js","webpack:///./src/components/layout/FoxSidebar.js","webpack:///./src/components/layout/index.js","webpack:///./src/components/pages/Dashboard.js","webpack:///./src/components/routes.js","webpack:///./src/utils/DispalyFile.js","webpack:///./src/utils/FoxElements.js","webpack:///./src/utils/WorkerReview.js","webpack:///./src/utils/index.js"],"sourcesContent":["import React, { Suspense } from 'react'\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport { CContainer, CFade, CSpinner } from '@coreui/react'\r\nimport routes from '../routes'\r\n\r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <CSpinner size=\"sm\" variant=\"grow\" style={{ width: '4rem', height: '4rem' }} />\r\n  </div>\r\n)\r\n\r\nconst Page404 = React.lazy(() => import('../pages/Page404'));\r\n\r\nconst FoxContent = () => {\r\n  return (\r\n    <main className=\"c-main\">\r\n      <CContainer fluid>\r\n        <Suspense fallback={loading}>\r\n          <Switch>\r\n            {routes.map((route, idx) => {\r\n              return route.component && (\r\n                <Route\r\n                  key={idx}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  render={props => (\r\n                    <CFade>\r\n                      <route.component {...props} />\r\n                    </CFade>\r\n                  )} />\r\n              )\r\n            })}\r\n            <>\r\n              <Page404 />\r\n            </>\r\n          </Switch>\r\n        </Suspense>\r\n      </CContainer>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default React.memo(FoxContent)\r\n","import React from 'react'\r\nimport { useSelector, useDispatch, connect } from 'react-redux'\r\nimport {\r\n    CContainer,\r\n    CHeader,\r\n    CToggler,\r\n    CHeaderBrand,\r\n    CHeaderNav,\r\n    CHeaderNavItem,\r\n    CHeaderNavLink,\r\n    CSubheader,\r\n    CBreadcrumbRouter,\r\n    CLink, CCreateElement\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n// routes config\r\nimport routes from '../routes'\r\n\r\nimport {\r\n    FoxHeaderDropdown,\r\n    FoxHeaderDropdownMssg,\r\n    FoxHeaderDropdownNotif,\r\n    FoxHeaderDropdownTasks\r\n} from './index'\r\n\r\nimport { FoxHeaderNavLink } from '../../utils'\r\n\r\nconst FoxHeader = (props) => {\r\n    const dispatch = useDispatch()\r\n    const sidebarShow = useSelector(state => state.sidebarShow)\r\n\r\n    const toggleSidebar = () => {\r\n        const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\r\n        dispatch({ type: 'set', sidebarShow: val })\r\n    }\r\n\r\n    const toggleSidebarMobile = () => {\r\n        const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\r\n        dispatch({ type: 'set', sidebarShow: val })\r\n    }\r\n\r\n    return (\r\n        <CHeader withSubheader>\r\n            <CToggler\r\n                inHeader\r\n                className=\"ml-md-3 d-lg-none\"\r\n                onClick={toggleSidebarMobile}\r\n            />\r\n            <CToggler\r\n                inHeader\r\n                className=\"ml-3 d-md-down-none\"\r\n                onClick={toggleSidebar}\r\n            />\r\n            <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\r\n                {/* <CIcon name=\"logo\" height=\"48\" alt=\"Logo\" /> */}\r\n            </CHeaderBrand>\r\n\r\n            <CHeaderNav className=\"mr-auto\">\r\n                <CCreateElement\r\n                    items={props.navigation}\r\n                    components={{\r\n                        CHeaderNavItem,\r\n                        CHeaderNavLink,\r\n                        FoxHeaderNavLink\r\n                    }}\r\n                />\r\n            </CHeaderNav>\r\n\r\n            <CHeaderNav className=\"px-3\">\r\n                <FoxHeaderDropdownNotif />\r\n                {/* <FoxHeaderDropdownTasks /> */}\r\n                <FoxHeaderDropdownMssg />\r\n                <FoxHeaderDropdown />\r\n            </CHeaderNav>\r\n\r\n            <CSubheader className=\"px-3 justify-content-between\">\r\n                <CBreadcrumbRouter\r\n                    className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\"\r\n                    routes={routes}\r\n                />\r\n            </CSubheader>\r\n        </CHeader>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        navigation: state.headerNav,\r\n        company: state.company\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FoxHeader)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  CBadge,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react';\r\nimport { logoutUser } from '../../actions';\r\n\r\nclass TheHeaderDropdown extends Component {\r\n\r\n  handleClick = event => {\r\n    event.preventDefault()\r\n    this.props.logoutUser()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CDropdown\r\n        inNav\r\n        className=\"c-header-nav-items mx-2\"\r\n        direction=\"down\"\r\n      >\r\n        <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\r\n          <CIcon name=\"cil-user\" />\r\n        </CDropdownToggle>\r\n        <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n          {/* <CDropdownItem\r\n            header\r\n            tag=\"div\"\r\n            color=\"light\"\r\n            className=\"text-center\"\r\n          >\r\n            <strong>Account</strong>\r\n          </CDropdownItem>\r\n          <CDropdownItem>\r\n            <CIcon name=\"cil-bell\" className=\"mfe-2\" />\r\n            Updates\r\n            <CBadge color=\"info\" className=\"mfs-auto\">42</CBadge>\r\n          </CDropdownItem>\r\n          <CDropdownItem>\r\n            <CIcon name=\"cil-envelope-open\" className=\"mfe-2\" />\r\n            Messages\r\n            <CBadge color=\"success\" className=\"mfs-auto\">42</CBadge>\r\n          </CDropdownItem>\r\n          <CDropdownItem>\r\n            <CIcon name=\"cil-task\" className=\"mfe-2\" />\r\n            Tasks\r\n            <CBadge color=\"danger\" className=\"mfs-auto\">42</CBadge>\r\n          </CDropdownItem>\r\n          <CDropdownItem>\r\n            <CIcon name=\"cil-comment-square\" className=\"mfe-2\" />\r\n            Comments\r\n            <CBadge color=\"warning\" className=\"mfs-auto\">42</CBadge>\r\n          </CDropdownItem> */}\r\n          <CDropdownItem\r\n            header\r\n            tag=\"div\"\r\n            color=\"light\"\r\n            className=\"text-center\"\r\n          >\r\n            <strong>Settings</strong>\r\n          </CDropdownItem>\r\n          {/* <CDropdownItem>\r\n            <CIcon name=\"cil-user\" className=\"mfe-2\" />Profile\r\n          </CDropdownItem> */}\r\n          <CDropdownItem>\r\n            <CIcon name=\"cil-settings\" className=\"mfe-2\" />\r\n            Settings\r\n          </CDropdownItem>\r\n          {/* <CDropdownItem>\r\n            <CIcon name=\"cil-credit-card\" className=\"mfe-2\" />\r\n            Payments\r\n            <CBadge color=\"secondary\" className=\"mfs-auto\">42</CBadge>\r\n          </CDropdownItem>\r\n          <CDropdownItem>\r\n            <CIcon name=\"cil-file\" className=\"mfe-2\" />\r\n            Projects\r\n            <CBadge color=\"primary\" className=\"mfs-auto\">42</CBadge>\r\n          </CDropdownItem> */}\r\n          <CDropdownItem divider />\r\n          <CDropdownItem onClick={this.handleClick}>\r\n            <CIcon name=\"cil-account-logout\" className=\"mfe-2\" />\r\n            Logout\r\n          </CDropdownItem>\r\n        </CDropdownMenu>\r\n      </CDropdown>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  logoutUser: () => dispatch(logoutUser())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TheHeaderDropdown);\r\n","import React from 'react'\r\nimport {\r\n  CBadge,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CImg\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst TheHeaderDropdownMssg = () => {\r\n  const itemsCount = 4\r\n  return (\r\n    <CDropdown\r\n      inNav\r\n      className=\"c-header-nav-item mx-2\"\r\n      direction=\"down\"\r\n    >\r\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\r\n        <CIcon name=\"cil-envelope-open\" /><CBadge shape=\"pill\" color=\"info\">{itemsCount}</CBadge>\r\n      </CDropdownToggle>\r\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n        <CDropdownItem\r\n          header\r\n          tag=\"div\"\r\n          color=\"light\"\r\n        >\r\n          <strong>You have {itemsCount} messages</strong>\r\n        </CDropdownItem>\r\n        <CDropdownItem href=\"#\">\r\n          <div className=\"message\">\r\n            <div className=\"pt-3 mr-3 float-left\">\r\n              <div className=\"c-avatar\">\r\n                <CImg\r\n                  src={'avatars/7.jpg'}\r\n                  className=\"c-avatar-img\"\r\n                  alt=\"admin@bootstrapmaster.com\"\r\n                />\r\n                <span className=\"c-avatar-status bg-success\"></span>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <small className=\"text-muted\">John Doe</small>\r\n              <small className=\"text-muted float-right mt-1\">Just now</small>\r\n            </div>\r\n            <div className=\"text-truncate font-weight-bold\">\r\n              <span className=\"fa fa-exclamation text-danger\"></span> Important message\r\n            </div>\r\n            <div className=\"small text-muted text-truncate\">\r\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...\r\n            </div>\r\n          </div>\r\n        </CDropdownItem>\r\n\r\n        <CDropdownItem href=\"#\">\r\n          <div className=\"message\">\r\n            <div className=\"pt-3 mr-3 float-left\">\r\n              <div className=\"c-avatar\">\r\n                <CImg\r\n                  src={'avatars/6.jpg'}\r\n                  className=\"c-avatar-img\"\r\n                  alt=\"admin@bootstrapmaster.com\"\r\n                />\r\n                <span className=\"c-avatar-status bg-warning\"></span>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <small className=\"text-muted\">Jane Dovve</small>\r\n              <small className=\"text-muted float-right mt-1\">5 minutes ago</small>\r\n            </div>\r\n            <div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>\r\n            <div className=\"small text-muted text-truncate\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...\r\n            </div>\r\n          </div>\r\n        </CDropdownItem>\r\n\r\n        <CDropdownItem href=\"#\">\r\n          <div className=\"message\">\r\n            <div className=\"pt-3 mr-3 float-left\">\r\n              <div className=\"c-avatar\">\r\n                <CImg\r\n                  src={'avatars/5.jpg'}\r\n                  className=\"c-avatar-img\"\r\n                  alt=\"admin@bootstrapmaster.com\"\r\n                />\r\n                <span className=\"c-avatar-status bg-danger\"></span>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <small className=\"text-muted\">Janet Doe</small>\r\n              <small className=\"text-muted float-right mt-1\">1:52 PM</small>\r\n            </div>\r\n            <div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>\r\n            <div className=\"small text-muted text-truncate\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...\r\n            </div>\r\n          </div>\r\n        </CDropdownItem>\r\n\r\n        <CDropdownItem href=\"#\">\r\n          <div className=\"message\">\r\n            <div className=\"pt-3 mr-3 float-left\">\r\n              <div className=\"c-avatar\">\r\n                <CImg\r\n                  src={'avatars/4.jpg'}\r\n                  className=\"c-avatar-img\"\r\n                  alt=\"admin@bootstrapmaster.com\"\r\n                />\r\n                <span className=\"c-avatar-status bg-info\"></span>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <small className=\"text-muted\">Joe Doe</small>\r\n              <small className=\"text-muted float-right mt-1\">4:03 AM</small>\r\n            </div>\r\n            <div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>\r\n            <div className=\"small text-muted text-truncate\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...\r\n            </div>\r\n          </div>\r\n        </CDropdownItem>\r\n        <CDropdownItem href=\"#\" className=\"text-center border-top\"><strong>View all messages</strong></CDropdownItem>\r\n      </CDropdownMenu>\r\n    </CDropdown>\r\n  )\r\n}\r\n\r\nexport default TheHeaderDropdownMssg","import React from 'react'\r\nimport {\r\n  CBadge,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CProgress\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst TheHeaderDropdownNotif = () => {\r\n  const itemsCount = 5\r\n  return (\r\n    <CDropdown\r\n      inNav\r\n      className=\"c-header-nav-item mx-2\"\r\n    >\r\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\r\n        <CIcon name=\"cil-bell\"/>\r\n        <CBadge shape=\"pill\" color=\"danger\">{itemsCount}</CBadge>\r\n      </CDropdownToggle>\r\n      <CDropdownMenu  placement=\"bottom-end\" className=\"pt-0\">\r\n        <CDropdownItem\r\n          header\r\n          tag=\"div\"\r\n          className=\"text-center\"\r\n          color=\"light\"\r\n        >\r\n          <strong>You have {itemsCount} notifications</strong>\r\n        </CDropdownItem>\r\n        <CDropdownItem><CIcon name=\"cil-user-follow\" className=\"mr-2 text-success\" /> New user registered</CDropdownItem>\r\n        <CDropdownItem><CIcon name=\"cil-user-unfollow\" className=\"mr-2 text-danger\" /> User deleted</CDropdownItem>\r\n        <CDropdownItem><CIcon name=\"cil-chart-pie\" className=\"mr-2 text-info\" /> Sales report is ready</CDropdownItem>\r\n        <CDropdownItem><CIcon name=\"cil-basket\" className=\"mr-2 text-primary\" /> New client</CDropdownItem>\r\n        <CDropdownItem><CIcon name=\"cil-speedometer\" className=\"mr-2 text-warning\" /> Server overloaded</CDropdownItem>\r\n        <CDropdownItem\r\n          header\r\n          tag=\"div\"\r\n          color=\"light\"\r\n        >\r\n          <strong>Server</strong>\r\n        </CDropdownItem>\r\n        <CDropdownItem className=\"d-block\">\r\n          <div className=\"text-uppercase mb-1\">\r\n            <small><b>CPU Usage</b></small>\r\n          </div>\r\n          <CProgress size=\"xs\" color=\"info\" value={25} />\r\n          <small className=\"text-muted\">348 Processes. 1/4 Cores.</small>\r\n        </CDropdownItem>\r\n        <CDropdownItem className=\"d-block\">\r\n          <div className=\"text-uppercase mb-1\">\r\n            <small><b>Memory Usage</b></small>\r\n          </div>\r\n          <CProgress size=\"xs\" color=\"warning\" value={70} />\r\n          <small className=\"text-muted\">11444GB/16384MB</small>\r\n        </CDropdownItem>\r\n        <CDropdownItem className=\"d-block\">\r\n          <div className=\"text-uppercase mb-1\">\r\n            <small><b>SSD 1 Usage</b></small>\r\n          </div>\r\n          <CProgress size=\"xs\" color=\"danger\" value={90} />\r\n          <small className=\"text-muted\">243GB/256GB</small>\r\n        </CDropdownItem>\r\n      </CDropdownMenu>\r\n    </CDropdown>\r\n  )\r\n}\r\n\r\nexport default TheHeaderDropdownNotif","import React from 'react'\r\nimport {\r\n  CBadge,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CProgress\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst TheHeaderDropdownTasks = () => {\r\n  const itemsCount = 5\r\n  return (\r\n    <CDropdown\r\n      inNav\r\n      className=\"c-header-nav-item mx-2\"\r\n    >\r\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\r\n        <CIcon name=\"cil-list\" />\r\n        <CBadge shape=\"pill\" color=\"warning\">{itemsCount}</CBadge>\r\n      </CDropdownToggle>\r\n      <CDropdownMenu placement=\"bottom-end\" className=\"pt-0\">\r\n        <CDropdownItem\r\n          header\r\n          tag=\"div\"\r\n          className=\"text-center\"\r\n          color=\"light\"\r\n        >\r\n          <strong>You have {itemsCount} pending tasks</strong>\r\n        </CDropdownItem>\r\n        <CDropdownItem className=\"d-block\">\r\n          <div className=\"small mb-1\">Upgrade NPM &amp; Bower <span\r\n            className=\"float-right\"><strong>0%</strong></span></div>\r\n          <CProgress size=\"xs\" color=\"info\" value={0} />\r\n        </CDropdownItem>\r\n        <CDropdownItem className=\"d-block\">\r\n          <div className=\"small mb-1\">ReactJS Version <span className=\"float-right\"><strong>25%</strong></span></div>\r\n          <CProgress size=\"xs\" color=\"danger\" value={25} />\r\n        </CDropdownItem>\r\n        <CDropdownItem className=\"d-block\">\r\n          <div className=\"small mb-1\">VueJS Version <span className=\"float-right\"><strong>50%</strong></span></div>\r\n          <CProgress size=\"xs\" color=\"warning\" value={50} />\r\n        </CDropdownItem>\r\n        <CDropdownItem className=\"d-block\">\r\n          <div className=\"small mb-1\">Add new layouts <span className=\"float-right\"><strong>75%</strong></span></div>\r\n          <CProgress size=\"xs\" color=\"info\" value={75} />\r\n        </CDropdownItem>\r\n        <CDropdownItem className=\"d-block\">\r\n          <div className=\"small mb-1\">Angular 2 Cli Version <span className=\"float-right\"><strong>100%</strong></span></div>\r\n          <CProgress size=\"xs\" color=\"success\" value={100} />\r\n        </CDropdownItem>\r\n        <CDropdownItem className=\"text-center border-top\"><strong>View all tasks</strong></CDropdownItem>\r\n      </CDropdownMenu>\r\n    </CDropdown>\r\n  )\r\n}\r\n\r\nexport default TheHeaderDropdownTasks","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n    CCreateElement,\r\n    CSidebar,\r\n    CSidebarBrand,\r\n    CSidebarNav,\r\n    CSidebarNavDivider,\r\n    CSidebarNavTitle,\r\n    CSidebarMinimizer,\r\n    CSidebarNavDropdown,\r\n    CSidebarNavItem,\r\n} from '@coreui/react'\r\nimport { connect } from \"react-redux\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst FoxSidebar = (props) => {\r\n    const dispatch = useDispatch()\r\n    const show = useSelector(state => state.sidebarShow)\r\n    // props.projectId ? props.match.params.id = props.projectId : null\r\n    return (\r\n\r\n        <CSidebar\r\n            show={show}\r\n            onShowChange={(val) => dispatch({ type: 'set', sidebarShow: val })}\r\n        >\r\n            <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\r\n                <h2>{props.company ? props.company : \"FOX\"}</h2>\r\n            </CSidebarBrand>\r\n            <CSidebarNav>\r\n                {props.projectId ? <CCreateElement\r\n                    items={props.navigation}\r\n                    components={{\r\n                        CSidebarNavDivider,\r\n                        CSidebarNavDropdown,\r\n                        CSidebarNavItem,\r\n                        CSidebarNavTitle\r\n                    }}\r\n                /> : null}\r\n\r\n            </CSidebarNav>\r\n            <CSidebarMinimizer className=\"c-d-md-down-none\" />\r\n        </CSidebar>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        navigation: state.sidebar,\r\n        company: state.currentUser.company_name,\r\n        projectId: state.projectId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(React.memo(withRouter(FoxSidebar)))\r\n","// import FoxContent from './TheContent'\r\nimport FoxFooter from './FoxFooter'\r\nimport FoxHeader from './FoxHeader'\r\nimport FoxHeaderDropdown from './FoxHeaderDropdown'\r\nimport FoxHeaderDropdownMssg from './FoxHeaderDropdownMssg'\r\nimport FoxHeaderDropdownNotif from './FoxHeaderDropdownNotif'\r\nimport FoxHeaderDropdownTasks from './FoxHeaderDropdownTasks'\r\n// import FoxLayout from './TheLayout'\r\nimport FoxSidebar from './FoxSidebar'\r\nimport FoxContent from './FoxContent'\r\n\r\nexport {\r\n  FoxContent,\r\n  FoxFooter,\r\n  FoxHeader,\r\n  FoxHeaderDropdown,\r\n  FoxHeaderDropdownMssg,\r\n  FoxHeaderDropdownNotif,\r\n  FoxHeaderDropdownTasks,\r\n  // FoxLayout,\r\n  FoxSidebar\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getProfileFetch, getDashboardLayout } from '../../actions'\r\nimport {\r\n} from '@coreui/react'\r\nimport { FoxSidebar, FoxHeader, FoxContent } from '../layout';\r\nimport { matchPath } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.getProfileFetch()\r\n      .then(() => this.props.getDashboardLayout(this.props.currentUser.role, this.props.match.params.id))\r\n  }\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    const updatedMatch = matchPath(this.props.location.pathname, {\r\n      path: \"/projects/:id\",\r\n      exact: true\r\n    });\r\n    if (updatedMatch && (prevProps.location.pathname != this.props.location.pathname)) {\r\n      this.props.getDashboardLayout(this.props.currentUser.role, updatedMatch.params.id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (this.props.currentUser.username ?\r\n      <div className=\"c-app c-default-layout\">\r\n        <FoxSidebar />\r\n        <div className=\"c-wrapper\">\r\n          <FoxHeader />\r\n          <div className=\"c-body\">\r\n            <FoxContent />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      : <Redirect to=\"/login\" />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser,\r\n    navigation: state.sidebar\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProfileFetch: () => dispatch(getProfileFetch()),\r\n  getDashboardLayout: (userRole, projectId) => dispatch(getDashboardLayout(userRole, projectId))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\r\n","import React from 'react';\r\nconst ProjectList = React.lazy(() => import('./views/projects/ProjectList'))\r\nconst ApprovalList = React.lazy(() => import('./views/approvals/ApprovalList'))\r\nconst ApprovalDetail = React.lazy(() => import('./views/approvals/ApprovalDetail'))\r\nconst ContractorList = React.lazy(() => import('./views/contractors/ContractorList'))\r\nconst CurrentWorksList = React.lazy(() => import('./views/current_works/CurrentWorksList'))\r\nconst ClientManagerList = React.lazy(() => import('./views/managers/ClientManagerList'))\r\nconst ClientManagerCreate = React.lazy(() => import('./views/managers/ClientManagerCreate'))\r\nconst ClientManagerDetail = React.lazy(() => import('./views/managers/ClientManagerDetail'))\r\nconst WorkerList = React.lazy(() => import('./views/workers/WorkerList'))\r\nconst WorkerCreate = React.lazy(() => import('./views/workers/WorkerCreate'))\r\nconst WorkerDetail = React.lazy(() => import('./views/workers/WorkerDetail'))\r\nconst ProjectCreate = React.lazy(() => import('./views/projects/ProjectCreate'))\r\nconst ProjectDetail = React.lazy(() => import('./views/projects/ProjectDetail'))\r\nconst ProjectPTW = React.lazy(() => import('./views/projects/ProjectPTW'))\r\nconst ProjectUploadDocs = React.lazy(() => import('./views/projects/ProjectUploadDocs'))\r\nconst ContractorCreate = React.lazy(() => import('./views/contractors/ContractorCreate'))\r\nconst ContractorDetail = React.lazy(() => import('./views/contractors/ContractorDetail'))\r\nconst DocumentList = React.lazy(() => import('./views/documents/DocumentList'))\r\nconst DocumentCreate = React.lazy(() => import('./views/documents/DocumentCreate'))\r\nconst DocumentDetail = React.lazy(() => import('./views/documents/DocumentDetail'))\r\nconst SafetyVideo = React.lazy(() => import('./views/safety/Video'))\r\nconst ResponsiblePerson = React.lazy(() => import('./views/workers/ResponsiblePerson'))\r\nconst WorkersAssign = React.lazy(() => import('./views/workers/Assign'))\r\nconst ProposalSubmit = React.lazy(() => import('./views/projects/ProposalSubmit'))\r\n\r\n\r\nconst routes = [\r\n  { path: '/', exact: true, name: 'Fox' },\r\n  { path: '/projects', name: 'Projects', component: ProjectList, exact: true },\r\n  { path: '/projects/new', name: 'New', component: ProjectCreate, exact: true },\r\n  { path: '/projects/:id/ptw', name: 'PTW', component: ProjectPTW, exact: true },\r\n  { path: '/projects/:id/documents', name: 'Documents', component: DocumentList, exact: true },\r\n  { path: '/projects/:id/documents/new', name: 'New', component: DocumentCreate, exact: false },\r\n  { path: '/projects/:id/documents/:doc_id', name: 'Document Details', component: DocumentDetail, exact: false },\r\n  { path: '/projects/:id/responsible_person', name: 'Responsible Person', component: ResponsiblePerson, exact: false },\r\n  { path: '/projects/:id/safety_video', name: 'Safety Video', component: SafetyVideo, exact: true },\r\n  { path: '/projects/:id/assign_workers', name: 'Assign Workers', component: WorkersAssign, exact: true },\r\n  { path: '/projects/:id/submit_proposal', name: 'Submit Proposal', component: ProposalSubmit, exact: true },\r\n  { path: '/projects/:id/related_documents', name: 'Related Documents', component: ProjectUploadDocs, exact: true },\r\n  { path: '/projects/:id', name: 'Project Details', component: ProjectDetail, exact: false },\r\n  { path: '/approvals', name: 'Approvals', component: ApprovalList, exact: true },\r\n  { path: '/approvals/:id', name: 'Details', component: ApprovalDetail, exact: true },\r\n  { path: '/current-works', name: 'Current Works', component: CurrentWorksList, exact: true },\r\n  { path: '/contractors', name: 'Contractors', component: ContractorList, exact: true },\r\n  { path: '/contractors/new', name: 'New', component: ContractorCreate, exact: true },\r\n  { path: '/contractors/:id', name: 'Detail', component: ContractorDetail, exact: true },\r\n  { path: '/managers', name: 'Managers', component: ClientManagerList, exact: true },\r\n  { path: '/managers/new', name: 'New', component: ClientManagerCreate, exact: true },\r\n  { path: '/managers/:id', name: 'Details', component: ClientManagerDetail, exact: true },\r\n  { path: '/workers', name: 'Workers', component: WorkerList, exact: true },\r\n  { path: '/workers/new', name: 'New', component: WorkerCreate, exact: true },\r\n  { path: '/workers/:id', name: 'Project Details', component: WorkerDetail, exact: true },\r\n\r\n];\r\n\r\nexport default routes;\r\n","import React, { Component } from 'react';\r\nimport FileViewer from 'react-file-viewer';\r\nimport { FoxApiService } from '../services'\r\n\r\nconst foxApi = new FoxApiService();\r\n\r\nclass DisplayFile extends Component {\r\n\r\n  state = {\r\n    url: \"\"\r\n  }\r\n\r\n  getFileType = (filename) => {\r\n    const type = filename.split(\".\").pop()\r\n    return type\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    foxApi.downloadDocument(this.props.document.id)\r\n      .then(\r\n        (blob) => {\r\n          console.log(\"blob\", blob);\r\n          blob = blob.slice(0, blob.size, \"application/pdf\")\r\n          console.log(\"blob2\", blob);\r\n          const url = window.URL.createObjectURL(new Blob([blob], { type: \"application/pdf\" }))\r\n          console.log(url);\r\n          return url;\r\n        }\r\n      )\r\n      .then(url => {\r\n\r\n        this.setState({ url: url })\r\n      })\r\n  }\r\n  render = () => {\r\n    return (\r\n\r\n      <FileViewer\r\n        fileType={this.getFileType(this.props.document.filename)}\r\n        filePath={this.state.url} />\r\n    )\r\n  }\r\n}\r\nexport default DisplayFile","import React from 'react'\r\nimport { CHeaderNavLink } from '@coreui/react'\r\n\r\nconst FoxHeaderNavLink = (props) => {\r\n    return (\r\n        <CHeaderNavLink {...props} >{props.linktext}</CHeaderNavLink>\r\n    )\r\n}\r\n\r\nexport { FoxHeaderNavLink }","import React, { Component, Suspense } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FoxApiService } from '../services'\r\nimport { getProfileFetch } from '../actions'\r\nimport {\r\n  CLabel,\r\n  CButton,\r\n  CListGroup,\r\n  CListGroupItem,\r\n  CSpinner\r\n} from \"@coreui/react\";\r\n\r\nconst foxApi = new FoxApiService();\r\n\r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <CSpinner size=\"sm\" variant=\"grow\" style={{ width: '4rem', height: '4rem' }} />\r\n  </div>\r\n)\r\n\r\nclass WorkerReview extends Component {\r\n\r\n  state = {\r\n    name: \"\",\r\n    contractor: this.props.contractor,\r\n    birthday: \"\",\r\n    card_number_id: \"\",\r\n    license_number: \"\",\r\n    license_scan: \"\",\r\n    passport: \"\",\r\n    passport_scan: \"\",\r\n    safety_green_card: \"\",\r\n    safety_green_card_scan: \"\",\r\n    position_in_company: \"\",\r\n    safety_quiz_answer: \"\",\r\n    personal_declaration: \"\",\r\n    special_competency: \"\",\r\n    special_competency_scan: \"\",\r\n    registration_number: \"\",\r\n    filename: \"\",\r\n    doc_type: \"\",\r\n  }\r\n\r\n  downloadFile = async (e) => {\r\n    this.setState({\r\n      filename: e.target.value,\r\n      doc_type: e.target.name\r\n    }\r\n      , () => {\r\n        foxApi.downloadWorkerDocument(this.props.workerId, this.state.doc_type)\r\n          .then((blob) => {\r\n            const url = window.URL.createObjectURL(new Blob([blob]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            const filename = this.state.filename.split('/').pop();\r\n            link.setAttribute('download', filename);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            link.parentNode.removeChild(link);\r\n          })\r\n          .then(() => { console.log('file downloaded') })\r\n          .catch((error) => {\r\n            console.error('File download failed!');\r\n            console.error(error)\r\n          })\r\n      }\r\n    )\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.getProfileFetch()\r\n      .then(() => foxApi.getDetailsOf('workers', this.props.workerId))\r\n      .then((data) => this.setState(\r\n        { ...data }))\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  render = () => {\r\n    console.log(this.state);\r\n    return (\r\n      <Suspense fallback={loading}>\r\n        <CListGroup flush>\r\n          <CListGroupItem>\r\n            <p><strong>Birthday: </strong>{this.state.birthday}</p>\r\n          </CListGroupItem>\r\n          <CListGroupItem>\r\n            <p><strong>Card number ID: </strong>{this.state.card_number_id}</p>\r\n          </CListGroupItem>\r\n          <CListGroupItem>\r\n            <p><strong>License Number: </strong>{this.state.license_number}</p>\r\n            <CButton\r\n              variant=\"outline\"\r\n              color=\"success\"\r\n              id=\"license_scan\"\r\n              name=\"license_scan\"\r\n              value={this.state.license_scan}\r\n              onClick={this.downloadFile}\r\n            >Download</CButton>\r\n          </CListGroupItem>\r\n          <CListGroupItem>\r\n            <p><strong>Passport: </strong>{this.state.passport}</p>\r\n            <CButton\r\n              variant=\"outline\"\r\n              color=\"success\"\r\n              id=\"passport_scan\"\r\n              name=\"passport_scan\"\r\n              value={this.state.passport_scan}\r\n              onClick={this.downloadFile}\r\n            >Download</CButton>\r\n          </CListGroupItem>\r\n          <CListGroupItem>\r\n            <p><strong>Safety Green Card: </strong>{this.state.safety_green_card}</p>\r\n            <CButton\r\n              variant=\"outline\"\r\n              color=\"success\"\r\n              id=\"safety_green_card_scan\"\r\n              name=\"safety_green_card_scan\"\r\n              value={this.state.safety_green_card_scan}\r\n              onClick={this.downloadFile}\r\n            >Download</CButton>\r\n          </CListGroupItem>\r\n          <CListGroupItem>\r\n            <p><strong>Special competency: </strong>{this.state.special_competency}</p>\r\n            <CButton\r\n              variant=\"outline\"\r\n              color=\"success\"\r\n              id=\"special_competency_scan\"\r\n              name=\"special_competency_scan\"\r\n              value={this.state.special_competency_scan}\r\n              onClick={this.downloadFile}\r\n            >Download</CButton>\r\n          </CListGroupItem>\r\n          <CListGroupItem>\r\n            <p><strong>Competency issued by: </strong>{this.state.competency_issued_by}</p>\r\n          </CListGroupItem>\r\n          <CListGroupItem>\r\n            <p><strong>Registration number: </strong>{this.state.registration_number}</p>\r\n          </CListGroupItem>\r\n          <CListGroupItem>\r\n            <p><strong>Position in Company: </strong>{this.state.position_in_company}</p>\r\n          </CListGroupItem>\r\n          <CListGroupItem>\r\n            <p><strong>Safety quiz answer: </strong></p>\r\n            <CButton\r\n              variant=\"outline\"\r\n              color=\"success\"\r\n              id=\"safety_quiz_answer\"\r\n              name=\"safety_quiz_answer\"\r\n              value={this.state.safety_quiz_answer}\r\n              onClick={this.downloadFile}\r\n            >Download</CButton>\r\n          </CListGroupItem>\r\n          <CListGroupItem>\r\n            <p><strong>Personal declaration: </strong></p>\r\n            <CButton\r\n              variant=\"outline\"\r\n              color=\"success\"\r\n              id=\"personal_declaration\"\r\n              name=\"personal_declaration\"\r\n              value={this.state.personal_declaration}\r\n              onClick={this.downloadFile}\r\n            >Download</CButton>\r\n          </CListGroupItem>\r\n        </CListGroup>\r\n      </Suspense>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProfileFetch: () => dispatch(getProfileFetch()),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(WorkerReview)\r\n\r\n","import { FoxHeaderNavLink } from './FoxElements'\r\nimport DisplayFile from './DispalyFile'\r\nimport WorkerReview from './WorkerReview'\r\nexport { FoxHeaderNavLink, DisplayFile, WorkerReview }"],"mappings":"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AA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAFA;AAIA;AACA;;;;;AApCA;AACA;AAoCA;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AAQA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AACA;;AAoBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AANA;AAqBA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;;;;;AAnJA;AACA;AAoJA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;;;;;;;;;AC7KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;A","sourceRoot":""}