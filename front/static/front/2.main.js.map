{"version":3,"file":"2.main.js","sources":["webpack:///./src/components/forms/FoxFormGroupDownloadUpload.js","webpack:///./src/components/forms/FoxFormGroupInputDownLoadUpload.js","webpack:///./src/components/forms/FoxFormGroupWithUpload.js","webpack:///./src/components/forms/FoxProjectDocumentDownloadUploadFormGroup.js","webpack:///./src/components/forms/FoxReactSelectFormGroup.js","webpack:///./src/components/forms/FoxSelectFormGroup.js","webpack:///./src/components/forms/index.js","webpack:///./src/components/views/workers/optionLists.js"],"sourcesContent":["import React from 'react'\n\nimport {\n  CFormGroup,\n  CRow,\n  CCol,\n  CLabel,\n  CInputFile,\n  CButton\n} from '@coreui/react'\n\nconst makeLabel = inputString => {\n  return inputString.split(\"_\").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n}\n\nconst FoxFormGroupDownloadUpload = props => {\n  return (\n    <CFormGroup>\n      <CRow >\n        <CCol md=\"1\">\n          <CLabel htmlFor={props.inputInfo}>{makeLabel(props.inputInfo)}</CLabel>\n        </CCol>\n        <CCol md=\"2\">\n          <CButton\n            variant=\"outline\"\n            color=\"info\"\n            id={props.downloadValue}\n            name={props.uploadInfo}\n            value={props.downloadValue}\n            onClick={props.downloadFile}\n          >\n            Download scan\n      \t\t\t\t</CButton>\n        </CCol>\n        <CCol md=\"5\">\n          <CLabel htmlFor={props.uploadInfo}>{`New ${makeLabel(props.uploadInfo)}`}</CLabel>\n          <CInputFile id={props.uploadInfo} name={props.uploadInfo} onChange={props.handleFileUpload}\n          />\n        </CCol>\n      </CRow>\n    </CFormGroup>\n  )\n}\n\nexport default FoxFormGroupDownloadUpload","import React from 'react'\n\nimport {\n  CFormGroup,\n  CRow,\n  CCol,\n  CLabel,\n  CInput,\n  CInputFile,\n  CButton\n} from '@coreui/react'\n\nconst makeLabel = inputString => {\n  return inputString.split(\"_\").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n}\nconst makePlaceholder = inputString => {\n  return `Enter ${makeLabel(inputString)} info`\n}\n\nconst FoxFormGroupInputDownloadUpload = props => {\n  return (\n    <CFormGroup>\n      <CRow >\n        <CCol md=\"5\">\n          <CLabel htmlFor={props.inputInfo}>{makeLabel(props.inputInfo)}</CLabel>\n          <CInput\n            id={props.inputInfo}\n            name={props.inputInfo}\n            placeholder={makePlaceholder(props.inputInfo)}\n            value={props.inputValue}\n            onChange={props.handleChange}\n          />\n        </CCol>\n        <CCol md=\"2\" className=\"d-flex align-items-center\">\n          <CButton\n            variant=\"outline\"\n            color=\"info\"\n            id={props.downloadValue}\n            name={props.uploadInfo}\n            value={props.downloadValue}\n            onClick={props.downloadFile}\n          >\n            Download scan\n      \t\t\t\t</CButton>\n        </CCol>\n        <CCol md=\"5\">\n          <CLabel htmlFor={props.uploadInfo}>{`New ${makeLabel(props.uploadInfo)}`}</CLabel>\n          <CInputFile id={props.uploadInfo} name={props.uploadInfo} onChange={props.handleFileUpload}\n          />\n        </CCol>\n      </CRow>\n    </CFormGroup>\n  )\n}\n\nexport default FoxFormGroupInputDownloadUpload","import React from 'react'\n\nimport {\n  CFormGroup,\n  CRow,\n  CCol,\n  CLabel,\n  CInput,\n  CInputFile\n} from '@coreui/react'\n\nconst makeLabel = inputString => {\n  return inputString.split(\"_\").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n}\nconst makePlaceholder = inputString => {\n  return `Enter ${makeLabel(inputString)} info`\n}\n\nconst FoxFormGroupWithUpload = props => {\n  return (\n    <CFormGroup>\n      <CRow>\n        <CCol md=\"6\">\n          <CLabel htmlFor={props.inputInfo}>{makeLabel(props.inputInfo)}</CLabel>\n          <CInput\n            id={props.inputInfo}\n            name={props.inputInfo}\n            placeholder={makePlaceholder(props.inputInfo)}\n            value={props.inputValue}\n            onChange={props.handleChange}\n            required />\n        </CCol>\n        <CCol md=\"6\">\n          <CLabel htmlFor={props.uploadInfo}>{makeLabel(props.uploadInfo)}</CLabel>\n          <CInputFile id={props.uploadInfo} name={props.uploadInfo} onChange={props.handleFileUpload}\n            required />\n        </CCol>\n      </CRow>\n    </CFormGroup>\n  )\n}\n\nexport default FoxFormGroupWithUpload","import React from 'react'\n\nimport {\n  CCard,\n  CCardBody,\n  CFormGroup,\n  CRow,\n  CCol,\n  CLabel,\n  CInputFile,\n  CButton,\n  CLink\n} from '@coreui/react'\n\n\nconst FoxProjectDocumentDownLoadUploadFormGroup = props => {\n  return (\n    <CCard>\n      <CCardBody>\n        <CFormGroup key={`fg-${props.document.id}`}>\n\n          <CLabel key={`lb-${props.document.id}`} htmlFor={props.document.id}><h5>{props.document.name}</h5> </CLabel>\n          {props.document.url_to_doc ?\n            <CRow>\n              <CCol>\n                <CLink\n                  key={`dl-${props.document.id}`}\n                  href={props.document.url_to_doc}\n                  target=\"_blank\"\n                  className=\"btn btn-ghost-primary\"\n                >Open this document in Google Docs\n                </CLink>\n              </CCol>\n            </CRow>\n            :\n            <CRow>\n              <CCol md=\"3\">\n                <CButton\n                  variant=\"outline\"\n                  color=\"primary\"\n                  key={`cb-${props.document.id}`}\n                  id={props.document.id}\n                  name={props.document.id}\n                  value={props.document.filename}\n                  onClick={props.downloadFile}\n                >Download template for this document\n                </CButton>\n              </CCol>\n              <CCol md=\"5\">\n                <CLabel key={`lb-${props.document.id}`} htmlFor={props.document.id}><strong>Upload filled up document:</strong> </CLabel>\n                <CInputFile key={`of-${props.document.id}`}\n                  id={`file-${props.document.id}`}\n                  name={`${props.document.id}`}\n                  onChange={props.handleFileUpload}\n                />\n              </CCol>\n            </CRow>\n          }\n        </CFormGroup>\n      </CCardBody>\n    </CCard>\n\n  )\n\n}\n\nexport default FoxProjectDocumentDownLoadUploadFormGroup","import React from 'react'\nimport Select from 'react-select'\nimport {\n  CFormGroup,\n  CLabel,\n} from '@coreui/react'\n\nconst makeLabel = inputString => {\n  return inputString.split(\"_\").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n}\nconst makePlaceholder = inputString => {\n  return `Choose ${makeLabel(inputString)} info`\n}\n\nconst getValueFromOptions = (value, options) => {\n  return options.find(option => option.value === value)\n}\n\n\nconst FoxReactSelectFormGroup = props => {\n  return (\n    <CFormGroup>\n      <CLabel htmlFor={props.inputInfo}>{makeLabel(props.inputInfo)}</CLabel>\n      <Select\n        id={props.inputInfo}\n        name={props.inputInfo}\n        placeholder={makePlaceholder(props.inputInfo)}\n        value={getValueFromOptions(props.inputValue, props.options)}\n        onChange={props.handleChange}\n        options={props.options}\n        required\n      >\n      </Select>\n    </CFormGroup>\n  )\n}\n\nexport default FoxReactSelectFormGroup","import React from 'react'\n\nimport {\n  CFormGroup,\n  CLabel,\n  CSelect\n} from '@coreui/react'\n\nconst makeLabel = inputString => {\n  return inputString.split(\"_\").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n}\nconst makePlaceholder = inputString => {\n  return `Choose ${makeLabel(inputString)} info`\n}\n\n\nconst FoxSelectFormGroup = props => {\n  return (\n    <CFormGroup>\n      <CLabel htmlFor={props.inputInfo}>{makeLabel(props.inputInfo)}</CLabel>\n      <CSelect\n        id={props.inputInfo}\n        name={props.inputInfo}\n        placeholder={makePlaceholder(props.inputInfo)}\n        value={props.inputValue}\n        onChange={props.handleChange}\n        required\n      >\n        {props.options.map((option) => {\n          return (\n            <option key={option.id} value={option.id}>{option.position}</option>\n          )\n        }\n        )}\n      </CSelect>\n    </CFormGroup>\n  )\n}\n\nexport default FoxSelectFormGroup","import FoxFormGroupWithUpload from './FoxFormGroupWithUpload'\nimport FoxSelectFormGroup from './FoxSelectFormGroup'\nimport FoxReactSelectFormGroup from './FoxReactSelectFormGroup'\nimport FoxFormGroupInputDownloadUpload from './FoxFormGroupInputDownLoadUpload'\nimport FoxFormGroupDownloadUpload from './FoxFormGroupDownloadUpload'\nimport FoxProjectDocumentDownloadUploadFormGroup from './FoxProjectDocumentDownloadUploadFormGroup'\n\nexport {\n    FoxFormGroupWithUpload,\n    FoxSelectFormGroup,\n    FoxReactSelectFormGroup,\n    FoxFormGroupInputDownloadUpload,\n    FoxFormGroupDownloadUpload,\n    FoxProjectDocumentDownloadUploadFormGroup\n}","const positions = [\n    { value: -1, label: \"Choose worker position\" },\n    { value: \"Weld\", label: \"Welder\" },\n    { value: \"Fit\", label: \"Fitter\" },\n    { value: \"Help\", label: \"Helper\" },\n    { value: \"Rig\", label: \"Rigger\" },\n    { value: \"SafeOff\", label: \"Safety Officer\" },\n    { value: \"Plumb\", label: \"Plumber\" },\n    { value: \"Tech\", label: \"Technician\" },\n    { value: \"Electr\", label: \"Electrician\" },\n    { value: \"FlrInst\", label: \"Flooring Installer\" },\n    { value: \"HVACInst\", label: \"HVAC Installer\" },\n    { value: \"InsInst\", label: \"Insulation Installer\" },\n    { value: \"Surv\", label: \"Surveyor\" },\n    { value: \"BrcMans\", label: \"Brick Manson\" },\n    { value: \"Roof\", label: \"Roofer\" },\n    { value: \"SiteSuper\", label: \"Site Supervisor\" },\n    { value: \"Other\", label: \"Other\" }\n]\n\nconst tradeCompetencies = [\n    { id: -1, position: \"Choose trade competency\" },\n    { id: \"Civ\", position: \"Civil\" },\n    { id: \"Electr\", position: \"Electrical\" },\n    { id: \"Mech\", position: \"Mechanical\" },\n    { id: \"Infra\", position: \"Infra\" },\n    { id: \"Gen\", position: \"General\" },\n    { id: \"Safe\", position: \"Safety\" },\n    { id: \"Secur\", position: \"Security\" },\n]\n\n\nexport { positions, tradeCompetencies }"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AASA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAMA;AACA;AACA;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAYA;AACA;AAGA;AAAA;AAEA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAcA;AACA;AACA;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAAA;AAAA;AAEA;AAKA;AACA;AACA;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;A","sourceRoot":""}