{"version":3,"file":"22.main.js","sources":["webpack:///./src/components/views/projects/ProjectDetail.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { getProfileFetch, getContractorList, setProjectId } from '../../../actions'\nimport { connect } from 'react-redux'\nimport {\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel, CRow,\n  CCol,\n  CTextarea,\n  CSelect,\n  CLink,\n  CButton,\n  CEmbed,\n  CInputCheckbox\n} from \"@coreui/react\";\nimport DjangoCSRFToken from 'django-react-csrftoken'\nimport { FoxApiService } from '../../../services'\n\nconst foxApi = new FoxApiService();\n\nclass ProjectDetail extends Component {\n\n  state = {\n    name: \"\",\n    description: \"\",\n    start_date: \"\",\n    start_time: \"\",\n    end_date: \"\",\n    end_time: \"\",\n    company: this.props.company,\n    contractor: \"-1\",\n    work_at_height: false,\n    lifting_work: false,\n    confined_space: false,\n    hot_work: false,\n    chemical_handling: false,\n    work_alone: false,\n    work_at_sensitive_area: false,\n    cold_work: false,\n    error: false\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleCheck = event => {\n    this.setState({\n      [event.target.name]: event.target.checked\n    })\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    if (parseInt(this.state.contractor) < 0) {\n      this.setState({\n        error: 'Contractor was not selected! Please, choose contractor form the list'\n      })\n    } else {\n      this.formData = this.state;\n      delete this.formData.error;\n      await foxApi.updateEntityOf('projects', this.props.match.params.id, this.formData).then(() => {\n        this.props.history.goBack()\n      },\n        (error) => {\n          console.error(error);\n          this.setState({\n            error: 'Project update failed!' +\n              ' Please check your input and try again!' +\n              ' In case this problem repeats, please contact your administrator!'\n          })\n        })\n    }\n  }\n\n  componentDidMount = async () => {\n    await this.props.getProfileFetch()\n      .then(() => foxApi.getDetailsOf('projects', this.props.match.params.id))\n      .then((data) => this.setState({ ...data }))\n      .then(() => this.props.getContractorList())\n      .then(() => this.props.setProjectId(this.props.match.params.id))\n  }\n\n  render = () => {\n\n    return (\n      <CRow>\n        <CCol>{this.props.role === 'CliAdm' ? <CForm\n          onSubmit={this.handleSubmit}\n        >\n          <DjangoCSRFToken />\n          <CFormGroup>\n            <CLabel htmlFor=\"name\">Name</CLabel>\n            <CInput\n              id=\"name\"\n              name='name'\n              placeholder=\"Enter project name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              required />\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"description\">Description</CLabel>\n            <CTextarea\n              id=\"descrption\"\n              name=\"description\"\n              placeholder=\"Please, enter short description of the projet\"\n              value={this.state.description}\n              onChange={this.handleChange}\n              required\n            />\n          </CFormGroup>\n          <CFormGroup>\n            <CRow>\n              <CCol lg=\"6\">\n                <CLabel htmlFor=\"start_date\">Start Date</CLabel>\n                <CInput\n                  type=\"date\"\n                  id=\"start_date\"\n                  name=\"start_date\"\n                  placeholder=\"date\"\n                  value={this.state.start_date}\n                  onChange={this.handleChange}\n                  required\n                />\n              </CCol>\n              <CCol lg=\"6\">\n                <CLabel htmlFor=\"start_time\">Start Time</CLabel>\n                <CInput\n                  type=\"time\"\n                  id=\"start_time\"\n                  name=\"start_time\"\n                  // placeholder=\"date\"\n                  value={this.state.start_time}\n                  onChange={this.handleChange}\n                  required\n                />\n              </CCol>\n            </CRow>\n          </CFormGroup>\n          <CFormGroup>\n            <CRow>\n              <CCol lg=\"6\">\n                <CLabel htmlFor=\"end_date\">End Date</CLabel>\n                <CInput\n                  type=\"date\"\n                  id=\"end_date\"\n                  name=\"end_date\"\n                  placeholder=\"date\"\n                  value={this.state.end_date}\n                  onChange={this.handleChange}\n                  required\n                />\n              </CCol>\n              <CCol lg=\"6\">\n                <CLabel htmlFor=\"end_time\">End Time</CLabel>\n                <CInput\n                  type=\"time\"\n                  id=\"end_time\"\n                  name=\"end_time\"\n                  // placeholder=\"date\"\n                  value={this.state.end_time}\n                  onChange={this.handleChange}\n                  required\n                />\n              </CCol>\n            </CRow>\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"contractor\">Contractor</CLabel>\n            <CSelect\n              id=\"contractor\"\n              name=\"contractor\"\n              placeholder=\"Choose contractor\"\n              value={this.state.contractor}\n              onChange={this.handleChange}\n              required\n            >\n              <option key=\"-1\" value=\"-1\" disabled>Choose contractor</option>\n              {this.props.options ? this.props.options.map((option) => {\n                return (\n                  <option key={option.id} value={option.id}>{option.username}</option>\n                )\n              }) : null}\n            </CSelect>\n          </CFormGroup>\n          <CFormGroup>\n            <CLink\n              className=\"btn btn-outline-dark mr-3\"\n              to={`${this.props.match.url}/ptw`}\n            >\n              See Permission To Work\n              </CLink>\n            <CLink\n              className=\"btn btn-outline-dark\"\n              to={`${this.props.match.url}/documents`}\n            >\n              Attached Documents\n              </CLink>\n          </CFormGroup>\n          <CFormGroup variant=\"checkbox\" className=\"checkbox\">\n            <CFormGroup>\n              <CInputCheckbox\n                id=\"work_at_height\"\n                name=\"work_at_height\"\n                value=\"work_at_height\"\n                checked={this.state.work_at_height}\n                onChange={this.handleCheck}\n              />\n              <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"work_at_height\">Work at height</CLabel>\n            </CFormGroup>\n            <CFormGroup>\n              <CInputCheckbox\n                id=\"lifting_work\"\n                name=\"lifting_work\"\n                value=\"lifting_work\"\n                checked={this.state.lifting_work}\n                onChange={this.handleCheck}\n              />\n              <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"lifting_work\">Lifting work</CLabel>\n            </CFormGroup>\n            <CFormGroup>\n              <CInputCheckbox\n                id=\"confined_space\"\n                name=\"confined_space\"\n                value=\"confined_space\"\n                value=\"confined_space\"\n                checked={this.state.confined_space}\n                onChange={this.handleCheck}\n              />\n              <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"confined_space\">Confined space</CLabel>\n            </CFormGroup>\n            <CFormGroup>\n              <CInputCheckbox\n                id=\"hot_work\"\n                name=\"hot_work\"\n                value=\"hot_work\"\n                checked={this.state.hot_work}\n                onChange={this.handleCheck}\n              />\n              <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"hot_work\">Hot work</CLabel>\n            </CFormGroup>\n            <CFormGroup>\n              <CInputCheckbox\n                id=\"chemical_handling\"\n                name=\"chemical_handling\"\n                value=\"chemical_handling\"\n                checked={this.state.chemical_handling}\n                onChange={this.handleCheck}\n              />\n              <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"chemical_handling\">Chemical handling</CLabel>\n            </CFormGroup>\n            <CFormGroup>\n              <CInputCheckbox\n                id=\"work_alone\"\n                name=\"work_alone\"\n                value=\"work_alone\"\n                checked={this.state.work_alone}\n                onChange={this.handleCheck}\n              />\n              <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"work_alone\">Work alone</CLabel>\n            </CFormGroup>\n            <CFormGroup>\n              <CInputCheckbox\n                id=\"work_at_sensitive_area\"\n                name=\"work_at_sensitive_area\"\n                value=\"work_at_sensitive_area\"\n                checked={this.state.work_at_sensitive_area}\n                onChange={this.handleCheck}\n              />\n              <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"work_at_sensitive_area\">Work at sensitive area</CLabel>\n            </CFormGroup>\n            <CFormGroup>\n              <CInputCheckbox\n                id=\"cold_work\"\n                name=\"cold_work\"\n                value=\"cold_work\"\n                checked={this.state.cold_work}\n                onChange={this.handleCheck}\n              />\n              <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"cold_work\">Cold work</CLabel>\n            </CFormGroup>\n          </CFormGroup>\n          <CFormGroup>\n            <CButton type=\"submit\" color=\"success\" variant=\"outline\" block>Save changes</CButton>\n          </CFormGroup>\n          {this.state.error\n            ? <p>{this.state.error}</p>\n            : null\n          }\n        </CForm>\n          :\n          <CEmbed\n            ratio=\"16by9\"\n          >\n            <iframe src={`${window.location.origin}/api/ptw/${this.props.match.params.id}`} />\n          </CEmbed>}\n\n        </CCol>\n      </CRow >\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    company: state.currentUser.company,\n    options: state.entityListTable.tableData,\n    role: state.currentUser.role\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(getProfileFetch()),\n  getContractorList: () => dispatch(getContractorList()),\n  setProjectId: (id) => dispatch(setProjectId(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectDetail)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAaA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AACA;AAmBA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AADA;AACA;AALA;AAAA;AACA;AADA;AAQA;AACA;AATA;AAAA;AAWA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAKA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AACA;AACA;AAGA;AADA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAPA;AAcA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAPA;AAaA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AAKA;AACA;AAFA;AAOA;AACA;AAFA;AAOA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAQA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AASA;AADA;AAGA;AAAA;AAMA;AACA;;;;;AA7RA;AACA;AA8RA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}