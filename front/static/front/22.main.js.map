{"version":3,"file":"22.main.js","sources":["webpack:///./src/components/views/contractors/ContractorEdit.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { getProfileFetch } from '../../../actions'\nimport { connect } from 'react-redux'\nimport {\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel, CRow,\n  CCol,\n  CButton,\n  CLink,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CCardTitle,\n} from \"@coreui/react\";\nimport DjangoCSRFToken from 'django-react-csrftoken'\nimport { FoxApiService } from '../../../services'\n\nconst foxApi = new FoxApiService();\n\nclass ContractorEdit extends Component {\n\n  state = {\n    username: \"\",\n    email: \"\",\n    name: \"\",\n    related_company: \"\",\n    company_phone: \"\",\n    company: this.props.company,\n    role: \"Contr\",\n    error: false\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    this.formData = this.state;\n    delete this.formData.error;\n    await foxApi.updateEntityOf('contractors', this.props.match.params.id, this.formData).then(() => {\n      this.props.history.goBack()\n    },\n      (error) => {\n        console.error(error);\n        this.setState({\n          error: 'Contractor update failed!' +\n            ' Please check your input and try again!' +\n            ' In case this problem repeats, please contact your administrator!'\n        })\n      })\n  }\n\n  componentDidMount = async () => {\n    console.log(this.props.match);\n    await this.props.getProfileFetch()\n      .then(() => foxApi.getDetailsOf('contractors', this.props.match.params.id))\n      .then((data) => this.setState({ ...data }))\n  }\n\n  componentWillUnmount = () => {\n    console.log(\"will unmount\");\n  }\n\n  render = () => {\n    return (\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n              <CCardTitle>\n                Contractor Details\n              </CCardTitle>\n            </CCardHeader>\n            <CCardBody>\n              <CForm\n                onSubmit={this.handleSubmit}\n              >\n                <DjangoCSRFToken />\n                <CFormGroup>\n                  <CLabel htmlFor=\"username\">Contractor username</CLabel>\n                  <CInput\n                    id=\"username\"\n                    name='username'\n                    placeholder=\"Username\"\n                    value={this.state.username}\n                    onChange={this.handleChange}\n                    required />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"email\">Contractor email</CLabel>\n                  <CInput\n                    id=\"email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                    required\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"related_company\">Contractor company</CLabel>\n                  <CInput\n                    id=\"related_company\"\n                    name='related_company'\n                    placeholder=\"Company name\"\n                    value={this.state.related_company}\n                    onChange={this.handleChange}\n                    required />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"name\">Contact person name</CLabel>\n                  <CInput\n                    id=\"name\"\n                    type=\"name\"\n                    name=\"name\"\n                    placeholder=\"Contact Person Name\"\n                    value={this.state.name}\n                    onChange={this.handleChange}\n                    required\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"company_phone\">Contact phone number</CLabel>\n                  <CInput\n                    id=\"company_phone\"\n                    name='company_phone'\n                    placeholder=\"Contact phone number\"\n                    value={this.state.company_phone}\n                    onChange={this.handleChange}\n                    required />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLink\n                    to={`/contractors/${this.props.match.params.id}/workers_review`}\n                  >Browse workers</CLink>\n                </CFormGroup>\n\n                <CFormGroup>\n                  <CButton shape=\"pill\" type=\"submit\" color=\"dark\" variant=\"outline\" block>Save changes</CButton>\n                </CFormGroup>\n                {this.state.error\n                  ? <p>{this.state.error}</p>\n                  : null\n                }\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow >\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    company: state.currentUser.company,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(getProfileFetch())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContractorEdit)\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAaA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AAGA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAKA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAgBA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAWA;AADA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;;;;;AAxIA;AACA;AAyIA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}