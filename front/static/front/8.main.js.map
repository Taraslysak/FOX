{"version":3,"file":"8.main.js","sources":["webpack:///./src/components/modals/DeleteModal.js","webpack:///./src/components/modals/index.js","webpack:///./src/components/views/workers/WorkerDetail.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  CButton,\n\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n} from '@coreui/react'\n\nconst DeleteModal = props => {\n  return (\n    <CModal\n      show={props.danger}\n      onClose={props.setModalVisibility}\n      color=\"danger\"\n    >\n      <CModalHeader closeButton>\n        <CModalTitle>Confirm Deletion</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        {`Are you sure you want to delete this ${props.entity}?`}\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"danger\" onClick={props.confirmDelete}>Confirm</CButton>{' '}\n        <CButton color=\"secondary\" onClick={props.setModalVisibility}>Cancel</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default DeleteModal\n","import DeleteModal from './DeleteModal'\n\nexport { DeleteModal }","import React, { Component } from 'react'\nimport { getProfileFetch } from '../../../actions'\nimport { connect } from 'react-redux'\nimport {\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel, CRow,\n  CCol,\n  CButton,\n} from \"@coreui/react\";\nimport DjangoCSRFToken from 'django-react-csrftoken'\nimport { FoxApiService } from '../../../services'\nimport { FoxFormGroupInputDownloadUpload, FoxSelectFormGroup, FoxReactSelectFormGroup, FoxFormGroupDownloadUpload } from '../../forms'\nimport { positions, tradeCompetencies } from './optionLists'\nimport { DeleteModal } from '../../modals'\n\nconst foxApi = new FoxApiService();\n\nclass WorkerDetail extends Component {\n\n  state = {\n    modal: false,\n    name: \"\",\n    contractor: \"\",\n    birthday: \"\",\n    card_number_id: \"\",\n    license_number: \"\",\n    license_scan: \"\",\n    passport: \"\",\n    passport_scan: \"\",\n    safety_green_card: \"\",\n    safety_green_card_scan: \"\",\n    position_in_company: \"\",\n    safety_quiz_answer: \"\",\n    personal_declaration: \"\",\n    special_competency: \"\",\n    special_competency_scan: \"\",\n    competency_issued_by: \"\",\n    registration_number: \"\",\n    error: false,\n    filename: \"\",\n    doc_type: \"\",\n    upload_files: {}\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleFileUpload = event => {\n    const { upload_files } = this.state;\n    upload_files[event.target.name] = event.target.files[0];\n    this.setState({\n      upload_files: upload_files,\n      [event.target.name]: \"\"\n    }, () => console.log(this.state));\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    this.requestData = this.state;\n    const { upload_files } = this.requestData\n    delete this.requestData.modal\n    delete this.requestData.upload_files\n    delete this.requestData.error;\n    delete this.requestData.filename;\n    delete this.requestData.doc_type;\n    delete this.requestData.license_scan;\n    delete this.requestData.passport_scan;\n    delete this.requestData.safety_green_card_scan;\n    delete this.requestData.special_competency_scan;\n    delete this.requestData.safety_quiz_answer;\n    delete this.requestData.personal_declaration;\n    this.formData = new FormData\n    Object.entries(this.requestData).forEach(([key, value]) => {\n      this.formData.append(key, value);\n    });\n    upload_files ? Object.entries(upload_files).forEach(([key, value]) => {\n      this.formData.append(key, value)\n    }) : null;\n    await foxApi.patchEntityWithFiles('workers', this.props.match.params.id, this.formData)\n      .then(() => {\n        this.props.history.goBack()\n      },\n        (error) => {\n          console.error(error);\n          this.setState({\n            error: 'Worker update failed!' +\n              ' Please check your input and try again!' +\n              ' In case this problem repeats, please contact your administrator!'\n          })\n        })\n  }\n\n  confirmDelete = async () => {\n    await foxApi.deleteEntityOf('workers', this.props.match.params.id)\n      .then(() => {\n        this.props.history.goBack()\n      },\n        (error) => {\n          console.error(error);\n          this.setState({\n            error: 'Could not delete worker!' +\n              ' Please check your input and try again!' +\n              ' In case this problem repeats, please contact your administrator!'\n          })\n        })\n    console.log(`delete worker ${this.props.match.params.id}`);\n  }\n\n  downloadFile = async (e) => {\n    this.setState({\n      filename: e.target.value,\n      doc_type: e.target.name\n    }\n      , () => {\n        foxApi.downloadWorkerDocument(this.props.match.params.id, this.state.doc_type)\n          .then((blob) => {\n            const url = window.URL.createObjectURL(new Blob([blob]));\n            const link = document.createElement('a');\n            link.href = url;\n            const filename = this.state.filename.split('/').pop();\n            link.setAttribute('download', filename);\n            document.body.appendChild(link);\n            link.click();\n            link.parentNode.removeChild(link);\n          })\n          .then(() => { console.log('file downloaded') })\n          .catch((error) => {\n            console.error('File download failed!');\n            console.error(error)\n          })\n      }\n    )\n  }\n\n  setModalVisibility = () => {\n    this.setState({\n      modal: !this.state.modal\n    })\n  }\n\n  componentDidMount = async () => {\n    await this.props.getProfileFetch()\n      .then(() => foxApi.getDetailsOf('workers', this.props.match.params.id))\n      .then((data) => this.setState({ ...data }))\n  }\n\n  render = () => {\n    return (\n      <CRow>\n        <CCol>\n          <CForm\n            onSubmit={this.handleSubmit}\n          >\n            <DjangoCSRFToken />\n            <CFormGroup>\n              <CLabel htmlFor=\"name\">Name</CLabel>\n              <CInput\n                id=\"name\"\n                name='name'\n                placeholder=\"Enter worker name\"\n                value={this.state.name}\n                onChange={this.handleChange}\n                required />\n            </CFormGroup>\n            <CFormGroup>\n              <CLabel htmlFor=\"birthday\">Birthday</CLabel>\n              <CInput\n                type=\"date\"\n                id=\"birthday\"\n                name=\"birthday\"\n                value={this.state.birthday}\n                onChange={this.handleChange}\n                required\n              />\n            </CFormGroup>\n            <FoxReactSelectFormGroup\n              options={positions}\n              inputInfo=\"position_in_company\"\n              inputValue={this.state.position_in_company}\n              handleChange={this.handleReactSelect}\n            />\n            <FoxSelectFormGroup\n              options={tradeCompetencies}\n              inputInfo=\"trade_competency\"\n              inputValue={this.state.trade_competency}\n              handleChange={this.handleChange}\n            />\n            <CFormGroup>\n              <CLabel htmlFor=\"card_number_id\">Card number ID</CLabel>\n              <CInput\n                id=\"card_number_id\"\n                name='card_number_id'\n                placeholder=\"Enter ID\"\n                value={this.state.card_number_id}\n                onChange={this.handleChange}\n                required />\n            </CFormGroup>\n            <FoxFormGroupInputDownloadUpload\n              inputValue={this.state.license_number}\n              downloadValue={this.state.license_scan}\n              handleChange={this.handleChange}\n              handleFileUpload={this.handleFileUpload}\n              inputInfo=\"license_number\"\n              uploadInfo=\"license_scan\"\n              downloadFile={this.downloadFile}\n            />\n            <FoxFormGroupInputDownloadUpload\n              inputValue={this.state.passport}\n              downloadValue={this.state.passport_scan}\n              handleChange={this.handleChange}\n              handleFileUpload={this.handleFileUpload}\n              inputInfo=\"passport\"\n              uploadInfo=\"passport_scan\"\n              downloadFile={this.downloadFile}\n            />\n            <FoxFormGroupInputDownloadUpload\n              inputValue={this.state.safety_green_card}\n              downloadValue={this.state.safety_green_card_scan}\n              handleChange={this.handleChange}\n              handleFileUpload={this.handleFileUpload}\n              inputInfo=\"safety_green_card\"\n              uploadInfo=\"safety_green_card_scan\"\n              downloadFile={this.downloadFile}\n            />\n            <FoxFormGroupInputDownloadUpload\n              inputValue={this.state.special_competency}\n              downloadValue={this.state.special_competency_scan}\n              handleChange={this.handleChange}\n              handleFileUpload={this.handleFileUpload}\n              inputInfo=\"special_competency\"\n              uploadInfo=\"special_competency_scan\"\n              downloadFile={this.downloadFile}\n            />\n            <CFormGroup>\n              <CLabel htmlFor=\"competency_issued_by\">Competency issued by</CLabel>\n              <CInput\n                id=\"competency_issued_by\"\n                name='competency_issued_by'\n                placeholder=\"Enter legal entity\"\n                value={this.state.competency_issued_by}\n                onChange={this.handleChange}\n              />\n            </CFormGroup>\n            <CFormGroup>\n              <CLabel htmlFor=\"registration_number\">Registration number</CLabel>\n              <CInput\n                id=\"registration_number\"\n                name='registration_number'\n                placeholder=\"Enter registration number\"\n                value={this.state.registration_number}\n                onChange={this.handleChange}\n              />\n            </CFormGroup>\n            <FoxFormGroupDownloadUpload\n              inputValue={this.state.safety_quiz_answer}\n              downloadValue={this.state.safety_quiz_answer_scan}\n              handleChange={this.handleChange}\n              handleFileUpload={this.handleFileUpload}\n              inputInfo=\"safety_quiz_answer\"\n              uploadInfo=\"safety_quiz_answer_scan\"\n              downloadFile={this.downloadFile}\n            />\n            <FoxFormGroupDownloadUpload\n              inputValue={this.state.personal_declaration}\n              downloadValue={this.state.personal_declaration_scan}\n              handleChange={this.handleChange}\n              handleFileUpload={this.handleFileUpload}\n              inputInfo=\"personal_declaration\"\n              uploadInfo=\"personal_declaration_scan\"\n              downloadFile={this.downloadFile}\n            />\n            <CFormGroup>\n              <CButton type=\"submit\" color=\"dark\" variant=\"outline\" block>Save changes</CButton>\n            </CFormGroup>\n            <CButton className=\"mb-3\" color=\"danger\" variant=\"outline\" onClick={this.setModalVisibility} block>Delete Worker</CButton>\n            {this.state.error\n              ? <p>{this.state.error}</p>\n              : null\n            }\n          </CForm>\n          <DeleteModal\n            setModalVisibility={this.setModalVisibility}\n            danger={this.state.modal}\n            entity=\"worker\"\n            confirmDelete={this.confirmDelete}\n          />\n        </CCol>\n      </CRow >\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contractor: state.currentUser.id,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(getProfileFetch()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkerDetail)\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AACA;AAwBA;AACA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AArBA;AAAA;AAwBA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAKA;AACA;AAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAKA;AACA;AAbA;AAaA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAeA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAyBA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAIA;AADA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AASA;AACA;;;;;AApRA;AACA;AAqRA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}