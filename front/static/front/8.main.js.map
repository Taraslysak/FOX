{"version":3,"file":"8.main.js","sources":["webpack:///./src/components/tables/FoxEntityListTable.js","webpack:///./src/components/views/documents/DocumentList.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardTitle,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CLink\r\n} from '@coreui/react'\r\n\r\n\r\n\r\nclass FoxEntityListTable extends Component {\r\n\r\n  alertOnClick = (e) => {\r\n    this.props.history.push(`${this.props.match.url}/${e.id}`)\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <CRow>\r\n        <CCol>\r\n          <CCard>\r\n            <CCardHeader\r\n              className=\"d-flex justify-content-between\">\r\n              <CCardTitle>\r\n                {this.props.tableName}\r\n              </CCardTitle>\r\n              <CLink\r\n                className=\"btn btn-outline-success\"\r\n                to={`${this.props.match.url}/new`}\r\n              >\r\n                Add new\r\n              </CLink>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={this.props.tableData}\r\n                fields={this.props.fields}\r\n                hover\r\n                striped\r\n                bordered\r\n                size=\"sm\"\r\n                itemsPerPage={10}\r\n                pagination\r\n                onRowClick={this.alertOnClick}\r\n                scopedSlots={{\r\n                  'status':\r\n                    (item) => (\r\n                      <td>\r\n                        <CBadge color={this.props.getBadge(item.status)}>\r\n                          {item.status}\r\n                        </CBadge>\r\n                      </td>\r\n                    )\r\n                }}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow >\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default FoxEntityListTable\r\n","import React, { Component } from 'react'\r\nimport FoxEntityListTable from '../../tables/FoxEntityListTable'\r\nimport { getProfileFetch, getDocumentList, } from '../../../actions'\r\nimport { connect } from 'react-redux'\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\n\r\nclass DocumentList extends Component {\r\n\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.getProfileFetch()\r\n      .then(() =>\r\n        this.props.getDocumentList({\r\n          project_id: this.props.match.params.id\r\n        }))\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <FoxEntityListTable\r\n        {...this.props}\r\n        tableName='Documents'\r\n        fields={this.props.documentListTable.fields}\r\n        getBadge={getBadge}\r\n        tableData={this.props.documentListTable.tableData}\r\n      />\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    documentListTable: state.entityListTable\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProfileFetch: () => dispatch(getProfileFetch()),\r\n  getDocumentList: (params) => dispatch(getDocumentList(params))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DocumentList)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAaA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AADA;AAMA;AACA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAFA;AAFA;AAVA;AA0BA;AACA;;;;;AAnDA;AACA;AAqDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAOA;AACA;AAEA;;;;;;;;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AADA;AADA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAGA;AACA;AACA;AACA;AALA;AAQA;AACA;;;;;AAtBA;AACA;AAwBA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}