{"version":3,"file":"30.main.js","sources":["webpack:///./src/components/views/workers/WorkerCreate.js"],"sourcesContent":["import React, { Component } from 'react'\nimport DjangoCSRFToken from 'django-react-csrftoken'\nimport { connect } from 'react-redux'\nimport {\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CCol,\n  CButton,\n  CInputFile\n} from \"@coreui/react\";\nimport { getProfileFetch } from '../../../actions'\nimport { FoxApiService } from '../../../services'\nimport { FoxFormGroupWithUpload, FoxSelectFormGroup, FoxReactSelectFormGroup } from '../../forms'\nimport { positions, tradeCompetencies } from './optionLists'\n\nconst foxApi = new FoxApiService();\n\nclass WorkerCreate extends Component {\n\n  state = {\n    name: \"\",\n    contractor: this.props.contractor,\n    birthday: \"\",\n    card_number_id: \"\",\n    license_number: \"\",\n    license_scan: \"\",\n    passport: \"\",\n    passport_scan: \"\",\n    safety_green_card: \"\",\n    safety_green_card_scan: \"\",\n    position_in_company: -1,\n    safety_quiz_answer: \"\",\n    personal_declaration: \"\",\n    special_competency: \"\",\n    special_competency_scan: \"\",\n    competency_issued_by: \"\",\n    registration_number: \"\",\n    trade_competency: -1,\n    error: false\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    }, () => console.log(this.state));\n  }\n\n  handleReactSelect = (option, event) => {\n    this.setState({\n      [event.name]: option.value\n    }, () => console.log(this.state))\n  }\n\n  handleFileUpload = event => {\n    this.setState({\n      [event.target.name]: event.target.files[0]\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    if (this.state.position_in_company === -1) {\n      this.setState({\n        error: 'Worker position in company was not selected! Please, choose position form the list'\n      })\n    }\n    else if (this.state.trade_competency === -1) {\n      this.setState({\n        error: 'Trade competency was not selected! Please, choose competency form the list'\n      })\n    }\n    else {\n      this.requestData = this.state;\n      delete this.requestData.error;\n      this.formData = new FormData\n      Object.entries(this.requestData).forEach(([key, value]) => {\n        this.formData.append(key, value);\n      })\n      await foxApi.createEntityWithFile('workers', this.formData)\n        .then(() => {\n          this.props.history.goBack()\n        },\n          (error) => {\n            console.error(error);\n            this.setState({\n              error: 'Worker creation failed!' +\n                ' Please check your input and try again!' +\n                ' In case this problem repeats, please contact your administrator!'\n            })\n          })\n    }\n\n  }\n\n  componentDidMount = async () => {\n    await this.props.getProfileFetch()\n  }\n\n  render = () => {\n    return (\n      <CRow>\n        <CCol>\n          <CForm\n            onSubmit={this.handleSubmit}\n          >\n            <DjangoCSRFToken />\n            <CFormGroup>\n              <CLabel htmlFor=\"name\">Name</CLabel>\n              <CInput\n                id=\"name\"\n                name='name'\n                placeholder=\"Enter worker name\"\n                value={this.state.name}\n                onChange={this.handleChange}\n                required />\n            </CFormGroup>\n            <CFormGroup>\n              <CLabel htmlFor=\"birthday\">Birthday</CLabel>\n              <CInput\n                type=\"date\"\n                id=\"birthday\"\n                name=\"birthday\"\n                value={this.state.birthday}\n                onChange={this.handleChange}\n                required\n              />\n            </CFormGroup>\n            <FoxReactSelectFormGroup\n              options={positions}\n              inputInfo=\"position_in_company\"\n              inputValue={this.state.position_in_company}\n              handleChange={this.handleReactSelect}\n            />\n            <FoxSelectFormGroup\n              options={tradeCompetencies}\n              inputInfo=\"trade_competency\"\n              inputValue={this.state.trade_competency}\n              handleChange={this.handleChange}\n            />\n            <CFormGroup>\n              <CLabel htmlFor=\"card_number_id\">Card number ID</CLabel>\n              <CInput\n                id=\"card_number_id\"\n                name='card_number_id'\n                placeholder=\"Enter ID\"\n                value={this.state.card_number_id}\n                onChange={this.handleChange}\n                required />\n            </CFormGroup>\n            <FoxFormGroupWithUpload\n              inputValue={this.state.license_number}\n              handleChange={this.handleChange}\n              handleFileUpload={this.handleFileUpload}\n              inputInfo=\"license_number\"\n              uploadInfo=\"license_scan\"\n            />\n            <FoxFormGroupWithUpload\n              inputValue={this.state.passport}\n              handleChange={this.handleChange}\n              handleFileUpload={this.handleFileUpload}\n              inputInfo=\"passport\"\n              uploadInfo=\"passport_scan\"\n            />\n            <FoxFormGroupWithUpload\n              inputValue={this.state.safety_green_card}\n              handleChange={this.handleChange}\n              handleFileUpload={this.handleFileUpload}\n              inputInfo=\"safety_green_card\"\n              uploadInfo=\"safety_green_card_scan\"\n            />\n            <FoxFormGroupWithUpload\n              inputValue={this.state.special_competency}\n              handleChange={this.handleChange}\n              handleFileUpload={this.handleFileUpload}\n              inputInfo=\"special_competency\"\n              uploadInfo=\"special_competency_scan\"\n            />\n            <CFormGroup>\n              <CLabel htmlFor=\"competency_issued_by\">Competency issued by</CLabel>\n              <CInput\n                id=\"competency_issued_by\"\n                name='competency_issued_by'\n                placeholder=\"Enter legal entity\"\n                value={this.state.competency_issued_by}\n                onChange={this.handleChange}\n                required />\n            </CFormGroup>\n            <CFormGroup>\n              <CLabel htmlFor=\"registration_number\">Registration number</CLabel>\n              <CInput\n                id=\"registration_number\"\n                name='registration_number'\n                placeholder=\"Enter registration number\"\n                value={this.state.registration_number}\n                onChange={this.handleChange}\n                required />\n            </CFormGroup>\n            <CFormGroup>\n              <CLabel htmlFor=\"safety_quiz_answer\">Safety quiz answer</CLabel>\n              <CInputFile id=\"safety_quiz_answer\" name=\"safety_quiz_answer\" onChange={this.handleFileUpload}\n                required />\n            </CFormGroup>\n            <CFormGroup>\n              <CLabel htmlFor=\"personal_declaration\">Personal declaration</CLabel>\n              <CInputFile id=\"personal_declaration\" name=\"personal_declaration\" onChange={this.handleFileUpload}\n                required />\n            </CFormGroup>\n            <CFormGroup>\n              <CButton type=\"submit\" color=\"dark\" variant=\"outline\" block>Create Worker</CButton>\n            </CFormGroup>\n            {this.state.error\n              ? <p>{this.state.error}</p>\n              : null\n            }\n          </CForm>\n        </CCol>\n      </CRow >\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contractor: state.currentUser.id,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(getProfileFetch()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkerCreate)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AACA;AAqBA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AACA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AADA;AACA;AATA;AAAA;AACA;AADA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAlBA;AAAA;AAqBA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAKA;AACA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAIA;AADA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;;;;;AA1MA;AACA;AA2MA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}