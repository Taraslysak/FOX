{"version":3,"file":"20.main.js","sources":["webpack:///./src/components/views/company/CompanyDocuments.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { getProfileFetch } from '../../../actions'\nimport {\n  CForm,\n  CFormGroup,\n  CRow,\n  CCol,\n  CLabel,\n  CInput,\n  CInputFile,\n  CButton\n} from \"@coreui/react\";\nimport DjangoCSRFToken from 'django-react-csrftoken'\nimport { FoxApiService } from '../../../services'\n\nconst foxApi = new FoxApiService();\n\nclass CompanyDocuments extends Component {\n\n  state = {\n    safetyVideoURL: \"\",\n    personalDeclarationURL: \"\",\n    personalDeclarationFile: \"\",\n    company: this.props.company\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleFileUpload = event => {\n    this.setState({\n      [event.target.name]: event.target.files[0]\n    });\n  }\n\n  downloadFile = async () => {\n    await foxApi.downloadDocument(this.props.match.params.doc_id)\n      .then((blob) => {\n        const url = window.URL.createObjectURL(new Blob([blob]));\n        const link = document.createElement('a');\n        link.href = url;\n        const filename = this.state.file.split('/').pop();\n        link.setAttribute('download', filename);\n        document.body.appendChild(link);\n        link.click();\n        link.parentNode.removeChild(link);\n      })\n      .then(() => { console.log('file downloaded') })\n      .catch((error) => {\n        console.error('File download failed!');\n        console.error(error)\n      })\n  }\n\n  componentDidMount = () => {\n    this.props.getProfileFetch()\n  }\n\n  render = () => {\n    return (\n      <CRow>\n        <CCol>\n          <CForm onSubmit={this.handleSubmit} >\n            <DjangoCSRFToken />\n            <CFormGroup>\n              <CLabel htmlFor=\"safetyVideoURL\">Safety Video URL:</CLabel>\n              <CInput\n                id=\"safetyVideoURL\"\n                name=\"safetyVideoURL\"\n                placeholder=\"URL\"\n                value={this.state.safetyVideoURL}\n                onChange={this.handleChange}\n                required />\n            </CFormGroup>\n            <CFormGroup>\n              <CLabel htmlFor=\"personalDeclarationURL\">Personal Declaration:</CLabel>\n              <CButton\n                variant=\"outline\"\n                color=\"success\"\n                onClick={this.downloadFile}\n              >\n                Download\n                  </CButton>\n              <CInputFile id=\"personalDeclarationFile\" name=\"personalDeclarationFile\" onChange={this.handleFileUpload} />\n            </CFormGroup>\n\n          </CForm>\n        </CCol>\n      </CRow >\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.currentUser.username,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(getProfileFetch()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyDocuments)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAUA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAAA;AAOA;AACA;;;;;AA7EA;AACA;AA8EA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}