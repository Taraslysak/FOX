{"version":3,"file":"5.main.js","sources":["webpack:///./src/components/layout/FoxContent.js","webpack:///./src/components/layout/FoxHeader.js","webpack:///./src/components/layout/FoxHeaderDropdown.js","webpack:///./src/components/layout/FoxHeaderDropdownMssg.js","webpack:///./src/components/layout/FoxHeaderDropdownNotif.js","webpack:///./src/components/layout/FoxHeaderDropdownTasks.js","webpack:///./src/components/layout/FoxSideBar.js","webpack:///./src/components/layout/index.js","webpack:///./src/components/pages/Dashboard.js","webpack:///./src/components/routes.js","webpack:///./src/utils/DispalyFile.js","webpack:///./src/utils/FoxElements.js","webpack:///./src/utils/WorkerReview.js","webpack:///./src/utils/index.js"],"sourcesContent":["import React, { Suspense } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { CContainer, CFade, CSpinner } from '@coreui/react'\nimport routes from '../routes'\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <CSpinner size=\"sm\" variant=\"grow\" style={{ width: '4rem', height: '4rem' }} />\n  </div>\n)\n\nconst Page404 = React.lazy(() => import('../pages/Page404'));\n\nconst FoxContent = (props) => {\n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                    <CFade>\n                      <route.component {...props} />\n                    </CFade>\n                  )} />\n              )\n            })}\n            {props.role === \"CliMan\"\n              ?\n              <Redirect from=\"/\" to=\"/approvals\" />\n              :\n              <Redirect from=\"/\" to=\"/projects\" />\n            }\n            <>\n              <Page404 />\n            </>\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nconst mapStateToProps = state => ({\n  role: state.currentUser.role\n})\n\nexport default connect(mapStateToProps, null)(React.memo(FoxContent))\n","import React from 'react'\nimport { useSelector, useDispatch, connect } from 'react-redux'\nimport {\n    CContainer,\n    CHeader,\n    CToggler,\n    CHeaderBrand,\n    CHeaderNav,\n    CHeaderNavItem,\n    CHeaderNavLink,\n    CSubheader,\n    CBreadcrumbRouter,\n    CLink, CCreateElement\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n// routes config\nimport routes from '../routes'\n\nimport {\n    FoxHeaderDropdown,\n    FoxHeaderDropdownMssg,\n    FoxHeaderDropdownNotif,\n    FoxHeaderDropdownTasks\n} from './index'\n\nimport { FoxHeaderNavLink } from '../../utils'\n\nconst FoxHeader = (props) => {\n    const dispatch = useDispatch()\n    const sidebarShow = useSelector(state => state.sidebarShow)\n\n    const toggleSidebar = () => {\n        const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n        dispatch({ type: 'set', sidebarShow: val })\n    }\n\n    const toggleSidebarMobile = () => {\n        const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n        dispatch({ type: 'set', sidebarShow: val })\n    }\n\n    return (\n        <CHeader withSubheader>\n            <CToggler\n                inHeader\n                className=\"ml-md-3 d-lg-none\"\n                onClick={toggleSidebarMobile}\n            />\n            <CToggler\n                inHeader\n                className=\"ml-3 d-md-down-none\"\n                onClick={toggleSidebar}\n            />\n            <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n                {/* <CIcon name=\"logo\" height=\"48\" alt=\"Logo\" /> */}\n            </CHeaderBrand>\n\n            <CHeaderNav className=\"mr-auto\">\n                <CCreateElement\n                    items={props.navigation}\n                    components={{\n                        CHeaderNavItem,\n                        CHeaderNavLink,\n                        FoxHeaderNavLink\n                    }}\n                />\n            </CHeaderNav>\n\n            <CHeaderNav className=\"px-3\">\n                <FoxHeaderDropdownNotif />\n                {/* <FoxHeaderDropdownTasks /> */}\n                <FoxHeaderDropdownMssg />\n                <FoxHeaderDropdown />\n            </CHeaderNav>\n\n            <CSubheader className=\"px-3 justify-content-between\">\n                <CBreadcrumbRouter\n                    className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\"\n                    routes={routes}\n                />\n            </CSubheader>\n        </CHeader>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        navigation: state.headerNav,\n        company: state.company\n    }\n}\n\nexport default connect(mapStateToProps)(FoxHeader)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\nimport { logoutUser } from '../../actions';\n\nclass TheHeaderDropdown extends Component {\n\n  handleClick = event => {\n    event.preventDefault()\n    this.props.logoutUser()\n  }\n\n  render() {\n    return (\n      <CDropdown\n        inNav\n        className=\"c-header-nav-items mx-2\"\n        direction=\"down\"\n      >\n        <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n          <CIcon name=\"cil-user\" />\n        </CDropdownToggle>\n        <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n          {/* <CDropdownItem\n            header\n            tag=\"div\"\n            color=\"light\"\n            className=\"text-center\"\n          >\n            <strong>Account</strong>\n          </CDropdownItem>\n          <CDropdownItem>\n            <CIcon name=\"cil-bell\" className=\"mfe-2\" />\n            Updates\n            <CBadge color=\"info\" className=\"mfs-auto\">42</CBadge>\n          </CDropdownItem>\n          <CDropdownItem>\n            <CIcon name=\"cil-envelope-open\" className=\"mfe-2\" />\n            Messages\n            <CBadge color=\"success\" className=\"mfs-auto\">42</CBadge>\n          </CDropdownItem>\n          <CDropdownItem>\n            <CIcon name=\"cil-task\" className=\"mfe-2\" />\n            Tasks\n            <CBadge color=\"danger\" className=\"mfs-auto\">42</CBadge>\n          </CDropdownItem>\n          <CDropdownItem>\n            <CIcon name=\"cil-comment-square\" className=\"mfe-2\" />\n            Comments\n            <CBadge color=\"warning\" className=\"mfs-auto\">42</CBadge>\n          </CDropdownItem> */}\n          <CDropdownItem\n            header\n            tag=\"div\"\n            color=\"light\"\n            className=\"text-center\"\n          >\n            <strong>Settings</strong>\n          </CDropdownItem>\n          {/* <CDropdownItem>\n            <CIcon name=\"cil-user\" className=\"mfe-2\" />Profile\n          </CDropdownItem> */}\n          <CDropdownItem>\n            <CIcon name=\"cil-settings\" className=\"mfe-2\" />\n            Settings\n          </CDropdownItem>\n          {/* <CDropdownItem>\n            <CIcon name=\"cil-credit-card\" className=\"mfe-2\" />\n            Payments\n            <CBadge color=\"secondary\" className=\"mfs-auto\">42</CBadge>\n          </CDropdownItem>\n          <CDropdownItem>\n            <CIcon name=\"cil-file\" className=\"mfe-2\" />\n            Projects\n            <CBadge color=\"primary\" className=\"mfs-auto\">42</CBadge>\n          </CDropdownItem> */}\n          <CDropdownItem divider />\n          <CDropdownItem onClick={this.handleClick}>\n            <CIcon name=\"cil-account-logout\" className=\"mfe-2\" />\n            Logout\n          </CDropdownItem>\n        </CDropdownMenu>\n      </CDropdown>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n  logoutUser: () => dispatch(logoutUser())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TheHeaderDropdown);\n","import React from 'react'\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CImg\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst TheHeaderDropdownMssg = () => {\n  const itemsCount = 4\n  return (\n    <CDropdown\n      inNav\n      className=\"c-header-nav-item mx-2\"\n      direction=\"down\"\n    >\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n        <CIcon name=\"cil-envelope-open\" /><CBadge shape=\"pill\" color=\"info\">{itemsCount}</CBadge>\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n        >\n          <strong>You have {itemsCount} messages</strong>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <div className=\"message\">\n            <div className=\"pt-3 mr-3 float-left\">\n              <div className=\"c-avatar\">\n                <CImg\n                  src={'avatars/7.jpg'}\n                  className=\"c-avatar-img\"\n                  alt=\"admin@bootstrapmaster.com\"\n                />\n                <span className=\"c-avatar-status bg-success\"></span>\n              </div>\n            </div>\n            <div>\n              <small className=\"text-muted\">John Doe</small>\n              <small className=\"text-muted float-right mt-1\">Just now</small>\n            </div>\n            <div className=\"text-truncate font-weight-bold\">\n              <span className=\"fa fa-exclamation text-danger\"></span> Important message\n            </div>\n            <div className=\"small text-muted text-truncate\">\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...\n            </div>\n          </div>\n        </CDropdownItem>\n\n        <CDropdownItem href=\"#\">\n          <div className=\"message\">\n            <div className=\"pt-3 mr-3 float-left\">\n              <div className=\"c-avatar\">\n                <CImg\n                  src={'avatars/6.jpg'}\n                  className=\"c-avatar-img\"\n                  alt=\"admin@bootstrapmaster.com\"\n                />\n                <span className=\"c-avatar-status bg-warning\"></span>\n              </div>\n            </div>\n            <div>\n              <small className=\"text-muted\">Jane Dovve</small>\n              <small className=\"text-muted float-right mt-1\">5 minutes ago</small>\n            </div>\n            <div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>\n            <div className=\"small text-muted text-truncate\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...\n            </div>\n          </div>\n        </CDropdownItem>\n\n        <CDropdownItem href=\"#\">\n          <div className=\"message\">\n            <div className=\"pt-3 mr-3 float-left\">\n              <div className=\"c-avatar\">\n                <CImg\n                  src={'avatars/5.jpg'}\n                  className=\"c-avatar-img\"\n                  alt=\"admin@bootstrapmaster.com\"\n                />\n                <span className=\"c-avatar-status bg-danger\"></span>\n              </div>\n            </div>\n            <div>\n              <small className=\"text-muted\">Janet Doe</small>\n              <small className=\"text-muted float-right mt-1\">1:52 PM</small>\n            </div>\n            <div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>\n            <div className=\"small text-muted text-truncate\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...\n            </div>\n          </div>\n        </CDropdownItem>\n\n        <CDropdownItem href=\"#\">\n          <div className=\"message\">\n            <div className=\"pt-3 mr-3 float-left\">\n              <div className=\"c-avatar\">\n                <CImg\n                  src={'avatars/4.jpg'}\n                  className=\"c-avatar-img\"\n                  alt=\"admin@bootstrapmaster.com\"\n                />\n                <span className=\"c-avatar-status bg-info\"></span>\n              </div>\n            </div>\n            <div>\n              <small className=\"text-muted\">Joe Doe</small>\n              <small className=\"text-muted float-right mt-1\">4:03 AM</small>\n            </div>\n            <div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>\n            <div className=\"small text-muted text-truncate\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...\n            </div>\n          </div>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\" className=\"text-center border-top\"><strong>View all messages</strong></CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default TheHeaderDropdownMssg","import React from 'react'\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CProgress\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst TheHeaderDropdownNotif = () => {\n  const itemsCount = 5\n  return (\n    <CDropdown\n      inNav\n      className=\"c-header-nav-item mx-2\"\n    >\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n        <CIcon name=\"cil-bell\"/>\n        <CBadge shape=\"pill\" color=\"danger\">{itemsCount}</CBadge>\n      </CDropdownToggle>\n      <CDropdownMenu  placement=\"bottom-end\" className=\"pt-0\">\n        <CDropdownItem\n          header\n          tag=\"div\"\n          className=\"text-center\"\n          color=\"light\"\n        >\n          <strong>You have {itemsCount} notifications</strong>\n        </CDropdownItem>\n        <CDropdownItem><CIcon name=\"cil-user-follow\" className=\"mr-2 text-success\" /> New user registered</CDropdownItem>\n        <CDropdownItem><CIcon name=\"cil-user-unfollow\" className=\"mr-2 text-danger\" /> User deleted</CDropdownItem>\n        <CDropdownItem><CIcon name=\"cil-chart-pie\" className=\"mr-2 text-info\" /> Sales report is ready</CDropdownItem>\n        <CDropdownItem><CIcon name=\"cil-basket\" className=\"mr-2 text-primary\" /> New client</CDropdownItem>\n        <CDropdownItem><CIcon name=\"cil-speedometer\" className=\"mr-2 text-warning\" /> Server overloaded</CDropdownItem>\n        <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n        >\n          <strong>Server</strong>\n        </CDropdownItem>\n        <CDropdownItem className=\"d-block\">\n          <div className=\"text-uppercase mb-1\">\n            <small><b>CPU Usage</b></small>\n          </div>\n          <CProgress size=\"xs\" color=\"info\" value={25} />\n          <small className=\"text-muted\">348 Processes. 1/4 Cores.</small>\n        </CDropdownItem>\n        <CDropdownItem className=\"d-block\">\n          <div className=\"text-uppercase mb-1\">\n            <small><b>Memory Usage</b></small>\n          </div>\n          <CProgress size=\"xs\" color=\"warning\" value={70} />\n          <small className=\"text-muted\">11444GB/16384MB</small>\n        </CDropdownItem>\n        <CDropdownItem className=\"d-block\">\n          <div className=\"text-uppercase mb-1\">\n            <small><b>SSD 1 Usage</b></small>\n          </div>\n          <CProgress size=\"xs\" color=\"danger\" value={90} />\n          <small className=\"text-muted\">243GB/256GB</small>\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default TheHeaderDropdownNotif","import React from 'react'\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CProgress\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst TheHeaderDropdownTasks = () => {\n  const itemsCount = 5\n  return (\n    <CDropdown\n      inNav\n      className=\"c-header-nav-item mx-2\"\n    >\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n        <CIcon name=\"cil-list\" />\n        <CBadge shape=\"pill\" color=\"warning\">{itemsCount}</CBadge>\n      </CDropdownToggle>\n      <CDropdownMenu placement=\"bottom-end\" className=\"pt-0\">\n        <CDropdownItem\n          header\n          tag=\"div\"\n          className=\"text-center\"\n          color=\"light\"\n        >\n          <strong>You have {itemsCount} pending tasks</strong>\n        </CDropdownItem>\n        <CDropdownItem className=\"d-block\">\n          <div className=\"small mb-1\">Upgrade NPM &amp; Bower <span\n            className=\"float-right\"><strong>0%</strong></span></div>\n          <CProgress size=\"xs\" color=\"info\" value={0} />\n        </CDropdownItem>\n        <CDropdownItem className=\"d-block\">\n          <div className=\"small mb-1\">ReactJS Version <span className=\"float-right\"><strong>25%</strong></span></div>\n          <CProgress size=\"xs\" color=\"danger\" value={25} />\n        </CDropdownItem>\n        <CDropdownItem className=\"d-block\">\n          <div className=\"small mb-1\">VueJS Version <span className=\"float-right\"><strong>50%</strong></span></div>\n          <CProgress size=\"xs\" color=\"warning\" value={50} />\n        </CDropdownItem>\n        <CDropdownItem className=\"d-block\">\n          <div className=\"small mb-1\">Add new layouts <span className=\"float-right\"><strong>75%</strong></span></div>\n          <CProgress size=\"xs\" color=\"info\" value={75} />\n        </CDropdownItem>\n        <CDropdownItem className=\"d-block\">\n          <div className=\"small mb-1\">Angular 2 Cli Version <span className=\"float-right\"><strong>100%</strong></span></div>\n          <CProgress size=\"xs\" color=\"success\" value={100} />\n        </CDropdownItem>\n        <CDropdownItem className=\"text-center border-top\"><strong>View all tasks</strong></CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default TheHeaderDropdownTasks","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n    CCreateElement,\n    CSidebar,\n    CSidebarBrand,\n    CSidebarNav,\n    CSidebarNavDivider,\n    CSidebarNavTitle,\n    CSidebarMinimizer,\n    CSidebarNavDropdown,\n    CSidebarNavItem,\n} from '@coreui/react'\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\n\nimport CIcon from '@coreui/icons-react'\n\n\nconst FoxSidebar = (props) => {\n    const dispatch = useDispatch()\n    const show = useSelector(state => state.sidebarShow)\n    // props.projectId ? props.match.params.id = props.projectId : null\n    return (\n\n        <CSidebar\n            show={show}\n            onShowChange={(val) => dispatch({ type: 'set', sidebarShow: val })}\n        >\n            <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\n                <h2>{props.company ? props.company : \"FOX\"}</h2>\n            </CSidebarBrand>\n            <CSidebarNav>\n                {props.projectId ? <CCreateElement\n                    items={props.navigation}\n                    components={{\n                        CSidebarNavDivider,\n                        CSidebarNavDropdown,\n                        CSidebarNavItem,\n                        CSidebarNavTitle\n                    }}\n                /> : null}\n\n            </CSidebarNav>\n            <CSidebarMinimizer className=\"c-d-md-down-none\" />\n        </CSidebar>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        navigation: state.sidebar,\n        company: state.currentUser.company_name,\n        projectId: state.projectId\n    }\n}\n\nexport default connect(mapStateToProps)(React.memo(withRouter(FoxSidebar)))\n","// import FoxContent from './TheContent'\nimport FoxFooter from './FoxFooter'\nimport FoxHeader from './FoxHeader'\nimport FoxHeaderDropdown from './FoxHeaderDropdown'\nimport FoxHeaderDropdownMssg from './FoxHeaderDropdownMssg'\nimport FoxHeaderDropdownNotif from './FoxHeaderDropdownNotif'\nimport FoxHeaderDropdownTasks from './FoxHeaderDropdownTasks'\n// import FoxLayout from './TheLayout'\nimport FoxSidebar from './FoxSideBar'\nimport FoxContent from './FoxContent'\n\nexport {\n  FoxContent,\n  FoxFooter,\n  FoxHeader,\n  FoxHeaderDropdown,\n  FoxHeaderDropdownMssg,\n  FoxHeaderDropdownNotif,\n  FoxHeaderDropdownTasks,\n  // FoxLayout,\n  FoxSidebar\n}\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getProfileFetch, getDashboardLayout } from '../../actions'\nimport {\n} from '@coreui/react'\nimport { FoxSidebar, FoxHeader, FoxContent } from '../layout';\nimport { matchPath } from 'react-router-dom'\n\nclass Dashboard extends Component {\n\n  componentDidMount = async () => {\n    await this.props.getProfileFetch()\n      .then(() => this.props.getDashboardLayout(this.props.currentUser.role, this.props.match.params.id))\n  }\n\n  componentDidUpdate = (prevProps) => {\n    const updatedMatch = matchPath(this.props.location.pathname, {\n      path: \"/projects/:id\",\n      exact: true\n    });\n    if (updatedMatch && (prevProps.location.pathname != this.props.location.pathname)) {\n      this.props.getDashboardLayout(this.props.currentUser.role, updatedMatch.params.id);\n    }\n  }\n\n  render() {\n    return (this.props.currentUser.username ?\n      <div className=\"c-app c-default-layout\">\n        <FoxSidebar />\n        <div className=\"c-wrapper\">\n          <FoxHeader />\n          <div className=\"c-body\">\n            <FoxContent />\n          </div>\n        </div>\n      </div>\n      : <Redirect to=\"/login\" />\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    navigation: state.sidebar\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(getProfileFetch()),\n  getDashboardLayout: (userRole, projectId) => dispatch(getDashboardLayout(userRole, projectId))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n","import React from 'react';\nconst ProjectList = React.lazy(() => import('./views/projects/ProjectList'))\nconst ApprovalList = React.lazy(() => import('./views/approvals/ApprovalList'))\nconst ApprovalDetail = React.lazy(() => import('./views/approvals/ApprovalDetail'))\nconst ContractorList = React.lazy(() => import('./views/contractors/ContractorList'))\nconst CurrentWorksList = React.lazy(() => import('./views/current_works/CurrentWorksList'))\nconst ClientManagerList = React.lazy(() => import('./views/managers/ClientManagerList'))\nconst ClientManagerCreate = React.lazy(() => import('./views/managers/ClientManagerCreate'))\nconst ClientManagerDetail = React.lazy(() => import('./views/managers/ClientManagerDetail'))\nconst WorkerList = React.lazy(() => import('./views/workers/WorkerList'))\nconst WorkerCreate = React.lazy(() => import('./views/workers/WorkerCreate'))\nconst WorkerDetail = React.lazy(() => import('./views/workers/WorkerDetail'))\nconst ProjectCreate = React.lazy(() => import('./views/projects/ProjectCreate'))\nconst ProjectDetail = React.lazy(() => import('./views/projects/ProjectDetail'))\nconst ProjectPTW = React.lazy(() => import('./views/projects/ProjectPTW'))\nconst ProjectUploadDocs = React.lazy(() => import('./views/projects/ProjectUploadDocs'))\nconst ContractorCreate = React.lazy(() => import('./views/contractors/ContractorCreate'))\nconst ContractorDetail = React.lazy(() => import('./views/contractors/ContractorDetail'))\nconst ContractorWorkersReview = React.lazy(() => import('./views/workers/ContractorWorkersReview'))\nconst DocumentList = React.lazy(() => import('./views/documents/DocumentList'))\nconst DocumentCreate = React.lazy(() => import('./views/documents/DocumentCreate'))\nconst DocumentDetail = React.lazy(() => import('./views/documents/DocumentDetail'))\nconst SafetyVideo = React.lazy(() => import('./views/safety/Video'))\nconst WorkersAssign = React.lazy(() => import('./views/workers/Assign'))\nconst ProposalSubmit = React.lazy(() => import('./views/projects/ProposalSubmit'))\n\n\nconst routes = [\n  { path: '/', exact: true, name: 'Fox' },\n  { path: '/projects', name: 'Projects', component: ProjectList, exact: true },\n  { path: '/projects/new', name: 'New', component: ProjectCreate, exact: true },\n  { path: '/projects/:id/ptw', name: 'PTW', component: ProjectPTW, exact: true },\n  { path: '/projects/:id/documents', name: 'Documents', component: DocumentList, exact: true },\n  { path: '/projects/:id/documents/new', name: 'New', component: DocumentCreate, exact: false },\n  { path: '/projects/:id/documents/:doc_id', name: 'Document Details', component: DocumentDetail, exact: false },\n  { path: '/projects/:id/safety_video', name: 'Safety Video', component: SafetyVideo, exact: true },\n  { path: '/projects/:id/assign_workers', name: 'Assign Workers', component: WorkersAssign, exact: true },\n  { path: '/projects/:id/submit_proposal', name: 'Submit Proposal', component: ProposalSubmit, exact: true },\n  { path: '/projects/:id/related_documents', name: 'Related Documents', component: ProjectUploadDocs, exact: true },\n  { path: '/projects/:id', name: 'Project Details', component: ProjectDetail, exact: false },\n  { path: '/approvals', name: 'Approvals', component: ApprovalList, exact: true },\n  { path: '/approvals/:id', name: 'Approval Details', component: ApprovalDetail, exact: true },\n  { path: '/current-works', name: 'Current Works', component: CurrentWorksList, exact: true },\n  { path: '/contractors', name: 'Contractors', component: ContractorList, exact: true },\n  { path: '/contractors/new', name: 'New', component: ContractorCreate, exact: true },\n  { path: '/contractors/:id', name: 'Contractor Details', component: ContractorDetail, exact: true },\n  { path: '/contractors/:id/workers_review', name: 'Workers Review', component: ContractorWorkersReview, exact: true },\n  { path: '/managers', name: 'Managers', component: ClientManagerList, exact: true },\n  { path: '/managers/new', name: 'New', component: ClientManagerCreate, exact: true },\n  { path: '/managers/:id', name: 'Manager Details', component: ClientManagerDetail, exact: true },\n  { path: '/workers', name: 'Workers', component: WorkerList, exact: true },\n  { path: '/workers/new', name: 'New', component: WorkerCreate, exact: true },\n  { path: '/workers/:id', name: 'Worker Details', component: WorkerDetail, exact: true },\n\n];\n\nexport default routes;\n","import React, { Component, Fragment } from 'react';\nimport FileViewer from 'react-file-viewer';\nimport { FoxApiService } from '../services'\nimport { CSpinner, CCollapse, CButton } from '@coreui/react'\n\nconst foxApi = new FoxApiService();\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <CSpinner size=\"sm\" variant=\"grow\" style={{ width: '4rem', height: '4rem' }} />\n  </div>\n)\n\nclass DisplayFile extends Component {\n\n  state = {\n    parts: [],\n    doc_type: \"\",\n    loaded: false,\n    display_show: true\n  }\n\n  handleShow = () => {\n    this.setState({\n      display_show: !this.state.display_show\n    });\n  }\n\n  getDisplayUrl = () => {\n    const parts = this.state.parts;\n    const url = `${foxApi.apiBase}documents/display/${parts[0]}/${parts[1]}/${parts[2]}/`;\n    return url;\n  }\n\n  componentDidMount = () => {\n    foxApi.getDisplayPermission(this.props.document.id)\n      .then(\n        data => {\n          this.setState({\n            ...data,\n            loaded: true,\n          })\n        }\n      )\n      .catch(error => {\n        console.log(error);\n      });\n  }\n  render = () => {\n    console.log(this.state);\n    return (\n      this.state.loaded ?\n        <Fragment>\n          <CButton\n            block\n            color=\"link\"\n            className=\"text-left m-0 p-0 mb-1\"\n            onClick={this.handleShow}\n          >{this.state.display_show ? \"Hide preview\" : \"Show preview\"}</CButton>\n          <CCollapse show={this.state.display_show}>\n            <FileViewer\n              fileType={this.state.doc_type}\n              filePath={this.getDisplayUrl()} />\n          </CCollapse>\n        </Fragment>\n        :\n        loading\n    )\n  }\n}\nexport default DisplayFile","import React from 'react'\nimport { CHeaderNavLink } from '@coreui/react'\n\nconst FoxHeaderNavLink = (props) => {\n    return (\n        <CHeaderNavLink {...props} >{props.linktext}</CHeaderNavLink>\n    )\n}\n\nexport { FoxHeaderNavLink }","import React, { Component, Suspense } from 'react'\nimport { connect } from 'react-redux'\nimport { FoxApiService } from '../services'\nimport { getProfileFetch } from '../actions'\nimport {\n  CButton,\n  CListGroup,\n  CListGroupItem,\n  CSpinner\n} from \"@coreui/react\";\n\nconst foxApi = new FoxApiService();\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <CSpinner size=\"sm\" variant=\"grow\" style={{ width: '4rem', height: '4rem' }} />\n  </div>\n)\n\nclass WorkerReview extends Component {\n\n  state = {\n    name: \"\",\n    contractor: this.props.contractor,\n    birthday: \"\",\n    card_number_id: \"\",\n    license_number: \"\",\n    license_scan: \"\",\n    passport: \"\",\n    passport_scan: \"\",\n    safety_green_card: \"\",\n    safety_green_card_scan: \"\",\n    position_in_company: \"\",\n    safety_quiz_answer: \"\",\n    personal_declaration: \"\",\n    special_competency: \"\",\n    special_competency_scan: \"\",\n    registration_number: \"\",\n    filename: \"\",\n    doc_type: \"\",\n  }\n\n  downloadFile = async (e) => {\n    this.setState({\n      filename: e.target.value,\n      doc_type: e.target.name\n    }\n      , () => {\n        foxApi.downloadWorkerDocument(this.props.workerId, this.state.doc_type)\n          .then((blob) => {\n            const url = window.URL.createObjectURL(new Blob([blob]));\n            const link = document.createElement('a');\n            link.href = url;\n            const filename = this.state.filename.split('/').pop();\n            link.setAttribute('download', filename);\n            document.body.appendChild(link);\n            link.click();\n            link.parentNode.removeChild(link);\n          })\n          .then(() => { console.log('file downloaded') })\n          .catch((error) => {\n            console.error('File download failed!');\n            console.error(error)\n          })\n      }\n    )\n  }\n\n  componentDidMount = async () => {\n    await this.props.getProfileFetch()\n      .then(() => foxApi.getDetailsOf('workers', this.props.workerId))\n      .then((data) => this.setState(\n        { ...data }))\n      .catch(error => console.log(error))\n  }\n\n  render = () => {\n    return (\n      <Suspense fallback={loading}>\n        <CListGroup flush>\n          <CListGroupItem>\n            <p><strong>Birthday: </strong>{this.state.birthday}</p>\n          </CListGroupItem>\n          <CListGroupItem>\n            <p><strong>Card number ID: </strong>{this.state.card_number_id}</p>\n          </CListGroupItem>\n          <CListGroupItem>\n            <p><strong>License Number: </strong>{this.state.license_number}</p>\n            <CButton\n              variant=\"outline\"\n              color=\"success\"\n              id=\"license_scan\"\n              name=\"license_scan\"\n              value={this.state.license_scan}\n              onClick={this.downloadFile}\n            >Download</CButton>\n          </CListGroupItem>\n          <CListGroupItem>\n            <p><strong>Passport: </strong>{this.state.passport}</p>\n            <CButton\n              variant=\"outline\"\n              color=\"success\"\n              id=\"passport_scan\"\n              name=\"passport_scan\"\n              value={this.state.passport_scan}\n              onClick={this.downloadFile}\n            >Download</CButton>\n          </CListGroupItem>\n          <CListGroupItem>\n            <p><strong>Safety Green Card: </strong>{this.state.safety_green_card}</p>\n            <CButton\n              variant=\"outline\"\n              color=\"success\"\n              id=\"safety_green_card_scan\"\n              name=\"safety_green_card_scan\"\n              value={this.state.safety_green_card_scan}\n              onClick={this.downloadFile}\n            >Download</CButton>\n          </CListGroupItem>\n          <CListGroupItem>\n            <p><strong>Special competency: </strong>{this.state.special_competency}</p>\n            <CButton\n              variant=\"outline\"\n              color=\"success\"\n              id=\"special_competency_scan\"\n              name=\"special_competency_scan\"\n              value={this.state.special_competency_scan}\n              onClick={this.downloadFile}\n            >Download</CButton>\n          </CListGroupItem>\n          <CListGroupItem>\n            <p><strong>Competency issued by: </strong>{this.state.competency_issued_by}</p>\n          </CListGroupItem>\n          <CListGroupItem>\n            <p><strong>Registration number: </strong>{this.state.registration_number}</p>\n          </CListGroupItem>\n          <CListGroupItem>\n            <p><strong>Position in Company: </strong>{this.state.position_in_company}</p>\n          </CListGroupItem>\n          <CListGroupItem>\n            <p><strong>Safety quiz answer: </strong></p>\n            <CButton\n              variant=\"outline\"\n              color=\"success\"\n              id=\"safety_quiz_answer\"\n              name=\"safety_quiz_answer\"\n              value={this.state.safety_quiz_answer}\n              onClick={this.downloadFile}\n            >Download</CButton>\n          </CListGroupItem>\n          <CListGroupItem>\n            <p><strong>Personal declaration: </strong></p>\n            <CButton\n              variant=\"outline\"\n              color=\"success\"\n              id=\"personal_declaration\"\n              name=\"personal_declaration\"\n              value={this.state.personal_declaration}\n              onClick={this.downloadFile}\n            >Download</CButton>\n          </CListGroupItem>\n        </CListGroup>\n      </Suspense>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(getProfileFetch()),\n})\n\nexport default connect(null, mapDispatchToProps)(WorkerReview)\n\n","import { FoxHeaderNavLink } from './FoxElements'\nimport DisplayFile from './DispalyFile'\nimport WorkerReview from './WorkerReview'\nexport { FoxHeaderNavLink, DisplayFile, WorkerReview }"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAWA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AAEA;AAEA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAUA;AAAA;AAOA;AAAA;AAEA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7FA;AACA;AAEA;AAOA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AACA;AACA;;;;;;AACA;AACA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AA8BA;AACA;AACA;AACA;AAJA;AAYA;AAAA;AAAA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAMA;;;;AA/EA;AACA;AAiFA;AACA;AACA;AADA;AAGA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;;;;;;;;;AC1GA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;AC9HA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAWA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAKA;AAAA;AAEA;;;;AA9BA;AACA;AAgCA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AACA;AAKA;;;;;;;;;;;;ACvxDA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAFA;AAIA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAEA;AACA;AAFA;AAQA;AACA;;;;;AAxDA;AACA;AAwDA;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AACA;;AAoBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AANA;AAqBA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;;;;;AAlJA;AACA;AAmJA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;;;;;;;;;AC3KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;A","sourceRoot":""}