{"version":3,"file":"21.main.js","sources":["webpack:///./src/components/views/projects/ProjectCreate.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { getProfileFetch, getContractorList } from '../../../actions'\nimport { connect } from 'react-redux'\nimport {\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CCol,\n  CTextarea,\n  CSelect,\n  CButton,\n  CInputCheckbox\n} from \"@coreui/react\";\nimport DjangoCSRFToken from 'django-react-csrftoken'\nimport { FoxApiService } from '../../../services'\n\nconst foxApi = new FoxApiService();\n\nclass ProjectCreate extends Component {\n\n  state = {\n    name: \"\",\n    description: \"\",\n    start_date: \"\",\n    start_time: \"\",\n    end_date: \"\",\n    end_time: \"\",\n    company: this.props.company,\n    contractor: \"-1\",\n    work_at_height: false,\n    lifting_work: false,\n    confined_space: false,\n    hot_work: false,\n    chemical_handling: false,\n    work_alone: false,\n    work_at_sensitive_area: false,\n    cold_work: false,\n    error: false\n  }\n\n  handleChange = event => {\n\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleCheck = event => {\n    this.setState({\n      [event.target.name]: event.target.checked\n    })\n  }\n\n  silenceSubmit = event => {\n    event.preventDefault();\n  }\n\n  handleCreateProject = async () => {\n    await this.handleSubmit()\n      .then(() => {\n        this.props.history.goBack()\n      })\n      .catch((error) => {\n        console.error(error);\n        this.setState({\n          error: 'Project creation failed!' +\n            ' Please check your input and try again!' +\n            ' In case this problem repeats, please contact your administrator!'\n        })\n      })\n  }\n\n  handleDocumentCreationRedirect = async () => {\n    await this.handleSubmit()\n      .then(data => {\n        this.props.history.push(`/projects/${data.id}/documents/new`)\n      })\n      .catch((error) => {\n        console.error(error);\n        this.setState({\n          error: 'Project creation failed!' +\n            ' Please check your input and try again!' +\n            ' In case this problem repeats, please contact your administrator!'\n        })\n      })\n  }\n\n  handleSubmit = async () => {\n    console.log(this.state);\n    if (parseInt(this.state.contractor) < 0) {\n      this.setState({\n        error: 'Contractor was not selected! Please, choose contractor form the list'\n      })\n    } else {\n      this.formData = this.state;\n      delete this.formData.error;\n      return await foxApi.createEntityOf('projects', this.formData)\n    }\n  }\n\n  componentDidMount = async () => {\n    await this.props.getProfileFetch()\n      .then(() => this.props.getContractorList())\n  }\n\n  render = () => {\n    return (\n      <CRow>\n        <CCol>\n          <CForm\n            onSubmit={this.silenceSubmit}\n          >\n            <DjangoCSRFToken />\n            <CFormGroup>\n              <CLabel htmlFor=\"name\">Name</CLabel>\n              <CInput\n                id=\"name\"\n                name='name'\n                placeholder=\"Enter project name\"\n                value={this.state.name}\n                onChange={this.handleChange}\n                required />\n            </CFormGroup>\n            <CFormGroup>\n              <CLabel htmlFor=\"description\">Description</CLabel>\n              <CTextarea\n                id=\"descrption\"\n                name=\"description\"\n                placeholder=\"Please, enter short description of the projet\"\n                value={this.state.description}\n                onChange={this.handleChange}\n                required\n              />\n            </CFormGroup>\n            <CFormGroup>\n              <CRow>\n                <CCol lg=\"6\">\n                  <CLabel htmlFor=\"start_date\">Start Date</CLabel>\n                  <CInput\n                    type=\"date\"\n                    id=\"start_date\"\n                    name=\"start_date\"\n                    placeholder=\"date\"\n                    value={this.state.start_date}\n                    onChange={this.handleChange}\n                    required\n                  />\n                </CCol>\n                <CCol lg=\"6\">\n                  <CLabel htmlFor=\"start_time\">Start Time</CLabel>\n                  <CInput\n                    type=\"time\"\n                    id=\"start_time\"\n                    name=\"start_time\"\n                    value={this.state.start_time}\n                    onChange={this.handleChange}\n                    required\n                  />\n                </CCol>\n              </CRow>\n            </CFormGroup>\n            <CFormGroup>\n              <CRow>\n                <CCol lg=\"6\">\n                  <CLabel htmlFor=\"end_date\">End Date</CLabel>\n                  <CInput\n                    type=\"date\"\n                    id=\"end_date\"\n                    name=\"end_date\"\n                    placeholder=\"date\"\n                    value={this.state.end_date}\n                    onChange={this.handleChange}\n                    required\n                  />\n                </CCol>\n                <CCol lg=\"6\">\n                  <CLabel htmlFor=\"end_time\">End Time</CLabel>\n                  <CInput\n                    type=\"time\"\n                    id=\"end_time\"\n                    name=\"end_time\"\n                    value={this.state.end_time}\n                    onChange={this.handleChange}\n                    required\n                  />\n                </CCol>\n              </CRow>\n            </CFormGroup>\n            <CFormGroup>\n              <CLabel htmlFor=\"contractor\">Contractor</CLabel>\n              <CSelect\n                id=\"contractor\"\n                name=\"contractor\"\n                placeholder=\"Choose contractor\"\n                value={this.state.contractor}\n                onChange={this.handleChange}\n                required\n              >\n                <option key=\"-1\" value=\"-1\" disabled>Choose contractor</option>\n                {this.props.options ? this.props.options.map((option) => {\n                  return (\n                    <option key={option.id} value={option.id}>{option.username}</option>\n                  )\n                }) : null\n                }\n              </CSelect>\n            </CFormGroup>\n            <CFormGroup variant=\"checkbox\" className=\"checkbox\">\n              <CFormGroup>\n                <CInputCheckbox\n                  id=\"work_at_height\"\n                  name=\"work_at_height\"\n                  value=\"work_at_height\"\n                  onChange={this.handleCheck}\n                />\n                <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"work_at_height\">Work at height</CLabel>\n              </CFormGroup>\n              <CFormGroup>\n                <CInputCheckbox\n                  id=\"lifting_work\"\n                  name=\"lifting_work\"\n                  value=\"lifting_work\"\n                  onChange={this.handleCheck}\n                />\n                <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"lifting_work\">Lifting work</CLabel>\n              </CFormGroup>\n              <CFormGroup>\n                <CInputCheckbox\n                  id=\"confined_space\"\n                  name=\"confined_space\"\n                  value=\"confined_space\"\n                  onChange={this.handleCheck}\n                />\n                <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"confined_space\">Confined space</CLabel>\n              </CFormGroup>\n              <CFormGroup>\n                <CInputCheckbox\n                  id=\"hot_work\"\n                  name=\"hot_work\"\n                  value=\"hot_work\"\n                  onChange={this.handleCheck}\n                />\n                <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"hot_work\">Hot work</CLabel>\n              </CFormGroup>\n              <CFormGroup>\n                <CInputCheckbox\n                  id=\"chemical_handling\"\n                  name=\"chemical_handling\"\n                  value=\"chemical_handling\"\n                  onChange={this.handleCheck}\n                />\n                <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"chemical_handling\">Chemical handling</CLabel>\n              </CFormGroup>\n              <CFormGroup>\n                <CInputCheckbox\n                  id=\"work_alone\"\n                  name=\"work_alone\"\n                  value=\"work_alone\"\n                  onChange={this.handleCheck}\n                />\n                <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"work_alone\">Work alone</CLabel>\n              </CFormGroup>\n              <CFormGroup>\n                <CInputCheckbox\n                  id=\"work_at_sensitive_area\"\n                  name=\"work_at_sensitive_area\"\n                  value=\"work_at_sensitive_area\"\n                  onChange={this.handleCheck}\n                />\n                <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"work_at_sensitive_area\">Work at sensitive area</CLabel>\n              </CFormGroup>\n              <CFormGroup>\n                <CInputCheckbox\n                  id=\"cold_work\"\n                  name=\"cold_work\"\n                  value=\"cold_work\"\n                  onChange={this.handleCheck}\n                />\n                <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"cold_work\">Cold work</CLabel>\n              </CFormGroup>\n            </CFormGroup>\n            <CFormGroup>\n              <CButton onClick={this.handleDocumentCreationRedirect} color=\"dark\" variant=\"outline\" block>Create Project and go to document creation</CButton>\n              {/* <CButton onClick={this.handleCreateProject} color=\"dark\" variant=\"outline\" block>Create Project</CButton> */}\n            </CFormGroup>\n            {this.state.error\n              ? <p>{this.state.error}</p>\n              : null\n            }\n          </CForm>\n        </CCol>\n      </CRow >\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    company: state.currentUser.company,\n    options: state.entityListTable.tableData\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(getProfileFetch()),\n  getContractorList: () => dispatch(getContractorList())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectCreate)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAYA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AACA;AAmBA;AAEA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAKA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAKA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AACA;AAJA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAIA;AADA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAaA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AAIA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;;;;;AApRA;AACA;AAqRA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}