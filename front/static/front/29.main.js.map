{"version":3,"file":"29.main.js","sources":["webpack:///./src/components/views/workers/ContractorWorkersReview.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getProfileFetch, getWorkerList } from '../../../actions'\nimport {\n  CRow,\n  CCol,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCollapse\n} from \"@coreui/react\";\nimport { WorkerReview } from '../../../utils'\n\n\nclass ContractorWorkersReview extends Component {\n\n  state = {\n    current_worker_id: \"\",\n    current_worker_info: \"\"\n  }\n\n\n  handleWorkerSelect = event => {\n    this.state.current_worker_id === event.target.name ?\n      this.setState({\n        current_worker_id: \"\"\n      })\n      :\n      this.setState({\n        current_worker_id: event.target.name\n      })\n  }\n\n  componentDidMount = async () => {\n    await this.props.getProfileFetch()\n      .then(() => this.props.getWorkerList({ contractor_id: this.props.match.params.id }, false))\n  }\n\n  render = () => {\n    return (\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n              <strong>Workers</strong>\n            </CCardHeader>\n            <CCardBody>\n              {this.props.workers ?\n                this.props.workers.map((worker, idx) => {\n                  return (\n                    <CCard key={`card-${idx}`} className=\"mb-0\">\n                      <CCardHeader key={`ch-${idx}`} id={worker.id}>\n                        <h5 key={`h5-${idx}`} className=\"m-0 p-0\">{worker.name}</h5>\n                        <h6 key={`h6-${idx}`} className=\"m-0 p-0\">{worker.position_in_company}</h6>\n                        <CButton\n                          key={`btn-${idx}`}\n                          block\n                          color=\"link\"\n                          className=\"text-left m-0 p-0\"\n                          id={worker.id}\n                          value={worker.id}\n                          name={worker.id}\n                          onClick={this.handleWorkerSelect}\n                        >Display Details</CButton>\n                      </CCardHeader>\n                      <CCollapse key={`clps-${idx}`} show={this.state.current_worker_id === worker.id.toString()}>\n                        <CCardBody key={`cbody-${idx}`}>\n                          <WorkerReview workerId={worker.id} />\n                        </CCardBody>\n                      </CCollapse>\n                    </CCard>\n                  )\n                })\n                :\n                <strong>The contractor hasn't attached any workers yet.</strong>\n              }\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    workers: state.entityListTable.tableData\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(getProfileFetch()),\n  getWorkerList: (params, additional) => dispatch(getWorkerList(params, additional)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContractorWorkersReview)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AASA;AACA;AAEA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;AAKA;AACA;AAEA;AADA;AAKA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAUA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AASA;AACA;;;;;AApEA;AACA;AAqEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}