{"version":3,"file":"10.main.js","sources":["webpack:///./src/components/tables/FoxEntityListTable.js","webpack:///./src/components/views/contractors/ContractorList.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardTitle,\n  CCol,\n  CDataTable,\n  CRow,\n  CLink,\n  CButton\n} from '@coreui/react'\n\n\nclass FoxEntityListTable extends Component {\n\n  alertOnClick = (id, e) => {\n    this.props.history.push(`${this.props.match.url}/${id}`)\n  }\n\n  render = () => {\n    return (\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader\n              className=\"d-flex justify-content-between\">\n              <CCardTitle>\n                {this.props.tableName}\n              </CCardTitle>\n              {this.props.tableName === \"Projects\" && this.props.role === \"Contr\"\n                ?\n                null\n                :\n                <CLink\n                  className=\"btn btn-outline-success\"\n                  to={`${this.props.match.url}/new`}\n                >\n                  Add new\n                </CLink>\n              }\n            </CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={this.props.tableData ? this.props.tableData : []}\n                fields={this.props.fields ? this.props.fields : []}\n                clickableRows\n                hover\n                striped\n                bordered\n                sorter\n                footer\n                tableFilter\n                columnFilter\n                size=\"sm\"\n                itemsPerPage={10}\n                itemsPerPageSelect\n                pagination\n                scopedSlots={{\n                  'username':\n                    (item) => (\n                      <td>\n                        <CButton\n                          color=\"link\"\n                          onClick={e => { this.alertOnClick(item.id, e) }}\n                        >\n                          {item.username}\n                        </CButton>\n                      </td>\n                    ),\n                  'project_name':\n                    (item) => (\n                      <td>\n                        <CButton\n                          color=\"link\"\n                          onClick={e => { this.alertOnClick(item.id, e) }}\n                        >\n                          {item.project_name}\n                        </CButton>\n                      </td>\n                    ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow >\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  role: state.currentUser.role\n})\n\n\n\nexport default connect(mapStateToProps, null)(FoxEntityListTable)\n","import React, { Component } from 'react'\nimport FoxEntityListTable from '../../tables/FoxEntityListTable'\nimport { getProfileFetch, getContractorList, } from '../../../actions'\nimport { connect } from 'react-redux'\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active': return 'success'\n    case 'Inactive': return 'secondary'\n    case 'Pending': return 'warning'\n    case 'Banned': return 'danger'\n    default: return 'primary'\n  }\n}\n\n\nconst alertOnClick = () => {\n  alert('Clicked!');\n}\n\nclass ContractorList extends Component {\n\n  componentDidMount = async () => {\n    await this.props.getProfileFetch()\n      .then(() => this.props.getContractorList())\n  }\n\n  render = () => {\n    return (\n      <FoxEntityListTable\n        {...this.props}\n        tableName='Contractors'\n        fields={this.props.contractorTable.fields}\n        getBadge={getBadge}\n        tableData={this.props.contractorTable.tableData}\n        onRowClick={alertOnClick} />\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    contractorTable: state.entityListTable\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(getProfileFetch()),\n  getContractorList: () => dispatch(getContractorList())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContractorList)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAaA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AADA;AAUA;AACA;AAFA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAFA;AAFA;AAUA;AACA;AAGA;AACA;AAAA;AAAA;AAFA;AAFA;AAbA;AAfA;AA6CA;AACA;;;;;AA3EA;AACA;AA4EA;AAAA;AACA;AADA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;;;;AAlBA;AACA;AAoBA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}