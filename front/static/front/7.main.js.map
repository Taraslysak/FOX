{"version":3,"file":"7.main.js","sources":["webpack:///./src/components/cards/FoxRegisterCard.js","webpack:///./src/components/forms/FoxRegisterForm.js","webpack:///./src/components/pages/Register.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { CContainer, CRow, CCol, CCard, CCardHeader, CCardBody, CCardFooter } from \"@coreui/react\";\nimport FoxRegisterForm from \"../forms/FoxRegisterForm\"\n\nclass FoxRegisterCard extends Component {\n    render() {\n        return (\n            <CCard>\n                <CCardHeader color='dark' textColor='light'>\n                    Register\n                </CCardHeader>\n                <FoxRegisterForm username={this.props.username} />\n            </CCard>\n        )\n    }\n}\n\nexport default FoxRegisterCard;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CForm, CFormGroup, CInput, CLabel, CContainer, CRow, CCol } from \"@coreui/react\";\nimport DjangoCSRFToken from 'django-react-csrftoken'\nimport { userRegisterFetch, registerError, allowRegistration } from '../../actions'\n\n\nclass FoxRegisterForm extends Component {\n\n    state = {\n        username: this.props.username,\n        password: \"\",\n        password2: \"\",\n    }\n\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        }, () => {\n            if (this.state.password !== this.state.password2) {\n                this.props.registerError();\n            }\n            else {\n                this.props.allowRegistration(this.props.registrationToken);\n            };\n        });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.userRegisterFetch({\n            password: this.state.password,\n            token: this.props.registrationToken\n        })\n    }\n\n    render() {\n        console.log(this.props.errorMessage)\n        return (\n            <CContainer fluid={true}>\n                <CRow className=\"mt-2 mb-2\">\n                    <CCol sm=\"8\" className=\"mx-auto\">\n                        <CForm\n                            onSubmit={this.handleSubmit}\n                        >\n                            <DjangoCSRFToken />\n                            <CFormGroup>\n                                <CLabel htmlFor=\"username\">Name</CLabel>\n                                <CInput\n                                    id=\"username\"\n                                    name='username'\n                                    placeholder=\"Enter your name\"\n                                    value={this.state.username}\n                                    onChange={this.handleChange}\n                                    readOnly\n                                    required />\n                            </CFormGroup>\n                            <CFormGroup>\n                                <CLabel htmlFor=\"nf-password\">Password</CLabel>\n                                <CInput\n                                    type=\"password\"\n                                    id=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"Enter Password..\"\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                    required\n                                />\n                                <CLabel htmlFor=\"nf-password\">Confirm Password</CLabel>\n                                <CInput\n                                    type=\"password\"\n                                    id=\"password2\"\n                                    name=\"password2\"\n                                    placeholder=\"Confirm Password..\"\n                                    value={this.state.password2}\n                                    onChange={this.handleChange}\n                                    required\n                                />\n                            </CFormGroup>\n                            <CFormGroup>\n                                <CInput type=\"submit\" value=\"Submit\" color=\"info\" disabled={this.state.password !== this.state.password2} />\n                            </CFormGroup>\n                            {this.props.registerErrorFlag\n                                ? <p>{this.props.errorMessage ? this.props.errorMessage : 'INVALID CREDENTIALS! PLEASE, CHECK YOUR PASSWORD AND PASSWORD CONFIRMATION FIELDS!'}</p>\n                                : null\n                            }\n                        </CForm>\n                    </CCol>\n                </CRow>\n            </CContainer >\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        registerErrorFlag: state.registerError,\n        registrationToken: state.registrationToken,\n        errorMessage: state.errorMessage\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    userRegisterFetch: credentials => dispatch(userRegisterFetch(credentials)),\n    registerError: () => dispatch(registerError()),\n    allowRegistration: (token) => dispatch(allowRegistration(token))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoxRegisterForm)","import React, { Component, Suspense } from 'react'\nimport {\n    CCol,\n    CContainer,\n    CRow,\n    CSpinner\n} from '@coreui/react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport FoxRegisterCard from \"../cards/FoxRegisterCard\";\nimport { userRegisterValidationFetch } from \"../../actions\"\n\n\nconst loading = (\n    <div className=\"pt-3 text-center\">\n        <CSpinner size=\"sm\" variant=\"grow\" style={{ width: '4rem', height: '4rem' }} />\n    </div>\n)\n\nclass Register extends Component {\n\n    componentDidMount = () => {\n        this.props.userRegisterValidationFetch(this.props.token)\n    }\n\n    render() {\n        return (!this.props.registerAllowed ? <Redirect to=\"/login\" /> :\n            <Suspense fallback={loading}>\n                <div className=\"c-app c-default-layout flex-row align-items-center\">\n                    <CContainer>\n                        <CRow className=\"justify-content-center\">\n                            <CCol md=\"6\">\n                                <FoxRegisterCard username={this.props.username} />\n                            </CCol>\n                        </CRow>\n                    </CContainer>\n                </div>\n            </Suspense>\n\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        userRegistered: state.userRegistered,\n        registerAllowed: state.registerAllowed\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    userRegisterValidationFetch: token => dispatch(userRegisterValidationFetch(token))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AAAA;AAGA;;;;AAVA;AACA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AADA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;AArFA;AACA;AAuFA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7GA;AACA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;;;;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;;;;AArBA;AACA;AAwBA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}